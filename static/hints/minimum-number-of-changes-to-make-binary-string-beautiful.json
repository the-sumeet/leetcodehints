{
  "hints": [
    {
      "content": "Start by understanding the definition of a 'beautiful' string. A string is beautiful if it can be partitioned into substrings of even length, where each substring consists of only '0's or only '1's."
    },
    {
      "content": "Consider the implications of the string's even length. Since the string has an even length, any partitioning into substrings must also respect this property. Think about how pairs of characters can form these substrings."
    },
    {
      "content": "Count the number of '0's and '1's in the string. This will help you understand how many characters you might need to change to achieve uniform substrings of '0's or '1's."
    },
    {
      "content": "Group the string into pairs of characters. For example, in the string '1001', the pairs would be ('10', '01'). This will help you analyze how many pairs need changes to become uniform."
    },
    {
      "content": "For each pair of characters, determine how many changes are needed to make them uniform. For example, in the pair ('10'), you can change either character to make it ('11') or ('00')."
    },
    {
      "content": "Consider the total number of pairs in the string. Since the string has an even length, the number of pairs will be half the length of the string. This will guide your calculations."
    },
    {
      "content": "Create a strategy to minimize changes. For each pair, you can either convert both to '0's or both to '1's. Calculate the number of changes required for both options."
    },
    {
      "content": "Keep track of the changes needed for both scenarios (all '0's vs all '1's). After processing all pairs, you can sum the changes for both options."
    },
    {
      "content": "Think about edge cases, such as when the string is already beautiful. If the string consists entirely of '0's or '1's, no changes are needed."
    },
    {
      "content": "Finally, return the minimum number of changes needed from your calculations. Ensure to consider both options for uniform pairs and choose the one with fewer changes."
    }
  ],
  "questionNotes": [
    "The string has an even length.",
    "Each substring must have an even length.",
    "Each substring can only contain '0's or '1's.",
    "You can change any character in the string to either '0' or '1'.",
    "Return the minimum number of changes required."
  ]
}