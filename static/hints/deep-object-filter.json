{
  "hints": [
    {
      "content": "Start by understanding the structure of the input. The input can be a nested array or an object, so you will need to handle both cases. Consider how you can traverse these structures recursively."
    },
    {
      "content": "Think about how you would check each element against the provided filter function. You will need to apply this function to every element in the input, regardless of its depth in the nested structure."
    },
    {
      "content": "When dealing with arrays, remember that you can use methods like `Array.isArray()` to check if an element is an array. This will help you decide whether to recurse into it or not."
    },
    {
      "content": "For objects, you can use `Object.keys()` to get an array of the keys. Then, you can iterate over these keys and apply the filter function to their corresponding values."
    },
    {
      "content": "Consider how you will collect the results of the filter function. You might want to use an array to store the filtered results as you traverse the input structure."
    },
    {
      "content": "Pay attention to how you return the final result. You should return a new structure that mirrors the input but only includes the elements that pass the filter function."
    },
    {
      "content": "Think about edge cases, such as empty arrays or objects. How will your function behave if it receives an empty input? Make sure to handle these cases gracefully."
    },
    {
      "content": "Consider what happens if the filter function does not match any elements. Your output should still be a valid structure, even if it ends up being empty."
    },
    {
      "content": "As you build your solution, remember to test it with various inputs, including deeply nested structures and different data types. This will help ensure that your function is robust."
    },
    {
      "content": "Finally, try to outline the recursive approach you will take. You might want to define a helper function that handles the recursion and applies the filter function at each level."
    }
  ],
  "questionNotes": [
    "The input can be a deeply nested array or an object.",
    "The filter function will be applied to each element, regardless of its type.",
    "The output should maintain the structure of the input, but only include elements that pass the filter.",
    "Consider edge cases such as empty inputs and ensure your function handles them correctly."
  ]
}