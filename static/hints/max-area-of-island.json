{
  "hints": [
    {
      "content": "Start by understanding the structure of the grid. It's a binary matrix, meaning each cell can either be 0 (water) or 1 (land). Your goal is to identify groups of connected 1's."
    },
    {
      "content": "Think about how you can traverse the grid. A common approach for exploring connected components is using Depth-First Search (DFS) or Breadth-First Search (BFS). Which method do you prefer?"
    },
    {
      "content": "When you find a 1, consider how to mark it as visited. You can either change its value to 0 or use a separate data structure to track visited cells."
    },
    {
      "content": "As you traverse the island, keep track of the area. You can maintain a counter that increments for each cell you visit that is part of the island."
    },
    {
      "content": "Don't forget to explore all four directions (up, down, left, right) from each cell. Make sure your traversal function can handle edge cases where the indices might go out of bounds."
    },
    {
      "content": "After exploring an island, compare its area to a variable that keeps track of the maximum area found so far. This will help you find the largest island as you continue traversing the grid."
    },
    {
      "content": "Consider edge cases such as an empty grid or a grid filled entirely with water. How will your algorithm handle these scenarios?"
    },
    {
      "content": "Remember that the grid dimensions can vary, so ensure your solution is flexible. Use variables to store the dimensions of the grid rather than hardcoding values."
    },
    {
      "content": "Once you've implemented the traversal and area calculation, test your solution with the provided examples. Are there any cases where it doesn't return the expected result?"
    },
    {
      "content": "Finally, ensure your function returns 0 if there are no islands found. This is important for meeting the problem's requirements."
    }
  ],
  "questionNotes": [
    "The grid is a binary matrix with dimensions m x n (1 <= m, n <= 50).",
    "An island is defined as a group of 1's connected 4-directionally.",
    "Return the maximum area of an island; if no island exists, return 0."
  ]
}