{
  "hints": [
    {
      "content": "Start by understanding the flow of information. On day 1, only one person knows the secret. From day 2 onwards, this person will begin to share the secret after a specified delay."
    },
    {
      "content": "Identify how many new people can learn the secret each day. Remember that a person can only start sharing the secret after 'delay' days from when they learned it."
    },
    {
      "content": "Take note of the forgetting mechanism. Each person forgets the secret after 'forget' days, meaning they cannot share the secret on the day they forget or any day after."
    },
    {
      "content": "Consider using an array to keep track of how many new people learn the secret each day. For example, `people[i]` could represent the number of people who learn the secret on day `i`."
    },
    {
      "content": "Think about how to calculate the number of people who can share the secret on a given day. Only those who learned the secret 'delay' days ago can share it."
    },
    {
      "content": "Make sure to account for the people who forget the secret. If a person learns the secret on day `i`, they will forget it on day `i + forget`. This affects their ability to share."
    },
    {
      "content": "You might want to create a loop that iterates through each day up to `n` and updates the count of people who know the secret based on the rules of sharing and forgetting."
    },
    {
      "content": "When calculating the total number of people who know the secret, remember to sum only those who have not forgotten it by the end of day `n`."
    },
    {
      "content": "Don't forget to apply the modulo operation with `10^9 + 7` to keep your numbers manageable and to meet the problem's requirements."
    },
    {
      "content": "Finally, think about edge cases. For example, what happens if `n` is equal to `delay` or `forget`? How does this affect the number of people who can share or forget the secret?"
    }
  ],
  "questionNotes": [
    "Constraints: 2 <= n <= 1000, 1 <= delay < forget <= n.",
    "Return the result modulo 10^9 + 7.",
    "Ensure to account for the days when sharing and forgetting happen.",
    "People cannot share on the day they forget the secret."
  ]
}