{
  "hints": [
    {
      "content": "Start by understanding the input format. You have a list of employees, each represented by an ID, name, and salary. Make sure you can access each part of this data structure easily."
    },
    {
      "content": "Consider how you will group the employees. What data structure might be useful for grouping items by a common attribute, such as salary? Think about using a dictionary or a hashmap."
    },
    {
      "content": "When you iterate through the list of employees, think about how you will check if a salary already exists in your grouping structure. You may want to initialize an empty list for each salary."
    },
    {
      "content": "Remember that employees with the same salary should be grouped together. Plan how you will append employees to the correct list based on their salary."
    },
    {
      "content": "Consider edge cases, such as what happens if there are no employees or if all employees have the same salary. How will your solution handle these scenarios?"
    },
    {
      "content": "Think about the final output format. You need to return a structure that groups employees by their salary. What kind of data structure will best represent this grouping?"
    },
    {
      "content": "As you build your solution, ensure that you maintain the integrity of the employee data. Each employee should still be identifiable by their ID and name after grouping."
    },
    {
      "content": "When grouping employees, you might want to sort the salaries in ascending order for the final output. How can you achieve this with your current data structure?"
    },
    {
      "content": "Consider how you will convert your grouped data back into the required format. You may need to transform your dictionary or list of lists into a specific output structure."
    },
    {
      "content": "Finally, think about how you will implement the logic to return the grouped employees. You might want to loop through your grouped data and format it according to the expected output. Remember to keep the employee details intact."
    }
  ],
  "questionNotes": [
    "Input consists of a list of employees with ID, name, and salary.",
    "Employees with the same salary should be grouped together.",
    "Output format should maintain employee details while grouping by salary.",
    "Consider edge cases, such as empty input or all employees having the same salary."
  ]
}