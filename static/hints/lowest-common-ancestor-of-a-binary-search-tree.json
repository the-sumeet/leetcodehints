{
  "hints": [
    {
      "content": "First, recall the properties of a Binary Search Tree (BST). In a BST, for any given node, all values in its left subtree are smaller, and all values in its right subtree are larger."
    },
    {
      "content": "Consider how you would traverse the tree. You can use either a recursive or an iterative approach to navigate through the nodes. Think about how you would compare the values of the current node with those of nodes p and q."
    },
    {
      "content": "When you are at a node, check if both p and q are in the left subtree or the right subtree. This can help you decide whether to move left or right in the tree."
    },
    {
      "content": "If you find that one of p or q is on one side (left or right) and the other is on the opposite side, then the current node is the LCA. Why is that the case?"
    },
    {
      "content": "What if the current node is equal to either p or q? Remember that a node can be its own ancestor. Think about how this affects your search for the LCA."
    },
    {
      "content": "Consider edge cases, such as when p and q are the same node. In such cases, the LCA should be that node itself. How would you handle this in your logic?"
    },
    {
      "content": "Think about the constraints given. The number of nodes in the tree can be large, up to 100,000. What implications does this have for the efficiency of your solution?"
    },
    {
      "content": "You might want to implement a function that takes the root of the BST and the two nodes p and q as parameters. What would be the base case for your recursive function?"
    },
    {
      "content": "As you traverse the tree, keep track of the last visited node that could potentially be the LCA. This will help you return the correct node once you finish traversing."
    },
    {
      "content": "Finally, remember to return the LCA node at the end of your function. Ensure that your function handles all edge cases and returns the correct type as specified in the problem statement."
    }
  ],
  "questionNotes": [
    "The number of nodes in the tree is in the range [2, 10^5].",
    "Node values are unique and range from -10^9 to 10^9.",
    "p and q will always exist in the BST and are guaranteed to be different."
  ]
}