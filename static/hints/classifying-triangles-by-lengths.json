{
  "hints": [
    {
      "content": "Start by understanding the properties of triangles. Recall that a triangle can be classified as equilateral, isosceles, or scalene based on the lengths of its sides."
    },
    {
      "content": "Remember the triangle inequality theorem: for any triangle with sides a, b, and c, the sum of the lengths of any two sides must be greater than the length of the third side. This is crucial for determining if a triangle can exist."
    },
    {
      "content": "Consider how to represent the triangle sides. You might want to use a list or an array to store the three side lengths for each triangle."
    },
    {
      "content": "Think about how to categorize the triangles. You can use conditional statements to check the lengths of the sides against each other. For example, if all sides are equal, itâ€™s equilateral."
    },
    {
      "content": "When checking for isosceles triangles, remember that only two sides need to be equal. This can be checked using simple equality comparisons."
    },
    {
      "content": "Make sure to handle edge cases, such as when the triangle cannot be formed. If the triangle inequality is not satisfied, you may want to return a specific classification for invalid triangles."
    },
    {
      "content": "You may want to create a function that takes a list of triangles and returns their classifications. Consider how you will format the output to match the expected structure."
    },
    {
      "content": "Think about how to loop through the list of triangles and apply your classification logic to each one. You could use a for-loop to iterate over the rows of triangle lengths."
    },
    {
      "content": "As you implement the classification logic, ensure that you are returning the correct string labels for each type of triangle. For example, 'Equilateral', 'Isosceles', 'Scalene', or 'Invalid'."
    },
    {
      "content": "Finally, ensure your function handles multiple triangles correctly and returns a structured output that matches the input format. You might want to return a list of classifications corresponding to the input triangles."
    }
  ],
  "questionNotes": [
    "Each triangle is represented as an array of three integers.",
    "You must classify each triangle as 'Equilateral', 'Isosceles', 'Scalene', or 'Invalid'.",
    "The output should maintain the order of input triangles.",
    "Ensure to check the triangle inequality theorem for validity."
  ]
}