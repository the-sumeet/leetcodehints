{
  "hints": [
    {
      "content": "Start by understanding what a pancake flip does. A flip at position k reverses the first k elements of the array. For example, if you have arr = [3, 2, 1, 4] and you flip at k = 3, you will reverse the first three elements to get arr = [1, 2, 3, 4]."
    },
    {
      "content": "Consider how you can identify the largest unsorted element in the array. This will help you decide where to perform your flips to move elements into their correct positions."
    },
    {
      "content": "Think about the process of sorting the array. You can repeatedly find the largest unsorted element, flip it to the front, and then flip it to its correct position. This two-step process can help you systematically sort the array."
    },
    {
      "content": "Remember that the array is a permutation of integers from 1 to arr.length. This means you can use the value of each element to determine its target index in the sorted array."
    },
    {
      "content": "When flipping, keep track of the indices you are flipping. You need to return the sequence of k-values that correspond to each flip you perform. Make sure to store these values in the correct order."
    },
    {
      "content": "Consider edge cases, such as when the array is already sorted. In this case, you should return an empty array, indicating no flips are needed."
    },
    {
      "content": "Make sure to handle cases where the largest element is already in its correct position. You might need to perform a flip to bring it to the front first, even if it seems unnecessary."
    },
    {
      "content": "You can optimize your flips. If the largest unsorted element is already at the front, you can skip the first flip and just move it to the end. Think about how to minimize the number of flips you perform."
    },
    {
      "content": "As you implement your solution, consider using a loop to repeatedly find the largest unsorted element and perform the necessary flips until the array is sorted. Keep track of the number of flips to ensure you stay within the limit."
    },
    {
      "content": "Finally, ensure your implementation correctly returns the list of k-values. This should be the sequence of flips you performed, in the order they were executed, as an array."
    }
  ],
  "questionNotes": [
    "1 <= arr.length <= 100",
    "1 <= arr[i] <= arr.length",
    "All integers in arr are unique (i.e., arr is a permutation of the integers from 1 to arr.length).",
    "Return an array of the k-values corresponding to the sequence of pancake flips that sort arr.",
    "Any valid answer that sorts the array within 10 * arr.length flips will be judged as correct."
  ]
}