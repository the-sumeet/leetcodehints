{
  "hints": [
    {
      "content": "First, focus on understanding the structure of the input string. Identify how many '*' characters are present and how they interact with the non-'*' characters. Remember that each '*' can remove one character to its left."
    },
    {
      "content": "Consider how you can keep track of the characters that are available for deletion when you encounter a '*'. A stack or a list could be useful to maintain the order of the characters you may want to remove."
    },
    {
      "content": "When you find a '*', you need to identify the smallest character to its left. Think about how you can efficiently find this smallest character. What data structure could help you keep track of the minimum character?"
    },
    {
      "content": "Make sure to think about edge cases. What happens if there are multiple '*' characters in a row? How should you handle the characters left of each '*' when they are processed sequentially?"
    },
    {
      "content": "As you process each character, consider how to build the resulting string. You might want to use a list to collect characters that are not deleted, and then convert it to a string at the end."
    },
    {
      "content": "Remember that when you remove a character due to a '*', you can choose any of the smallest characters if there are ties. How will you implement this choice in your logic?"
    },
    {
      "content": "Think about the order of operations: for each '*', you need to find and remove the leftmost smallest character. Ensure your algorithm processes characters in the correct sequence."
    },
    {
      "content": "Consider the time complexity of your approach. You need to ensure that your solution can handle the upper limit of the input size efficiently. How can you avoid unnecessary operations?"
    },
    {
      "content": "As a final step, after processing all characters, ensure that you return the result in the correct format. This means converting your list of characters back into a string."
    },
    {
      "content": "You're almost there! To finalize your approach, think about how to implement the logic for removing characters based on the '*' and the smallest character to its left. Start coding this part carefully."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= s.length <= 10^5",
    "The string consists only of lowercase English letters and '*' characters.",
    "It is guaranteed that it is possible to delete all '*' characters.",
    "When there are multiple smallest characters, any of them can be removed.",
    "The final output must be a string."
  ]
}