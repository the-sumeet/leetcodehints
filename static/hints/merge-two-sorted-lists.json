{
  "hints": [
    {
      "content": "Start by understanding the structure of a linked list. Each node contains a value and a pointer to the next node. You will need to traverse both lists to merge them."
    },
    {
      "content": "Consider how you will compare the nodes of both lists. Since both lists are sorted, you can use a two-pointer technique to keep track of the current nodes in each list."
    },
    {
      "content": "Think about how to initialize your merged list. You will want to create a dummy node to simplify the merging process. This dummy node will help you easily return the head of the merged list later."
    },
    {
      "content": "As you traverse both lists, compare the values of the current nodes. Append the smaller node to your merged list and move the pointer of that list forward."
    },
    {
      "content": "What happens if one of the lists is exhausted before the other? Make sure to handle this case by appending the remaining nodes of the non-exhausted list to the merged list."
    },
    {
      "content": "Remember to update the pointers correctly. After appending a node to the merged list, you should also move the pointer of the merged list to the newly added node."
    },
    {
      "content": "Consider edge cases such as when both lists are empty or when one list is empty. Make sure your solution can handle these scenarios without errors."
    },
    {
      "content": "After merging the nodes, ensure that the next pointer of the last node in the merged list is set to null to avoid any potential cycles."
    },
    {
      "content": "Your final merged list should be returned starting from the node next to the dummy node. This is because the dummy node was just a placeholder."
    },
    {
      "content": "You are almost there! To summarize, use a dummy node, compare values, append nodes, and handle remaining nodes from either list. Now, implement these steps in code."
    }
  ],
  "questionNotes": [
    "Both lists are sorted in non-decreasing order.",
    "The number of nodes in both lists is in the range [0, 50].",
    "Node values are in the range [-100, 100].",
    "Return the head of the merged linked list, starting from the node after the dummy node."
  ]
}