{
  "hints": [
    {
      "content": "Start by understanding the structure of the input. The bank is represented as a 2D binary matrix where '1' indicates a security device and '0' indicates an empty cell. Your first step should be to determine how to iterate through this matrix."
    },
    {
      "content": "Focus on identifying the rows that contain security devices. You can count the number of '1's in each row. This will help you determine how many devices are available for potential laser beams."
    },
    {
      "content": "Remember that a laser beam can only connect devices from different rows. As you analyze the rows, keep track of the number of devices in the previous row when you encounter a row with devices."
    },
    {
      "content": "When you find a row with devices, check the rows above it. If any of those rows have devices, you can calculate the number of beams that can be formed. Think about how to use multiplication for counting beams."
    },
    {
      "content": "Make sure to handle the case where there are empty rows between rows with devices. You need to skip these rows entirely when counting potential beams. Consider using a loop to skip over rows without devices."
    },
    {
      "content": "Consider edge cases where there might be no devices at all or where all devices are in the same row. How will your code handle these situations? Ensure it returns 0 in such cases."
    },
    {
      "content": "As you iterate through the rows, maintain a variable to store the count of devices from the last row that had devices. This will help you calculate the number of beams for the current row."
    },
    {
      "content": "Think about how to structure your loops. You will likely need a nested loop: one to iterate over the rows and another to count the devices in each row. Keep track of the last row with devices as you go."
    },
    {
      "content": "When calculating the total number of beams, remember to add the product of the current row's device count and the last row's device count to a total beam count variable. This is where your multiplication comes into play."
    },
    {
      "content": "Finally, ensure your function returns the total count of beams after processing all rows. Your return statement should be simple but ensure it captures the total calculated beams."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= m, n <= 500; bank[i][j] is either '0' or '1'.",
    "The function should return the total number of laser beams as an integer.",
    "Rows are indexed from 0, and beams can only be formed between devices in different rows."
  ]
}