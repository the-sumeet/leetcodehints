{
  "hints": [
    {
      "content": "Start by understanding the structure of the input. Each person is represented as a pair [h_i, k_i], where h_i is the height and k_i is the number of people in front of them who are taller or of the same height."
    },
    {
      "content": "Consider how the values of k_i affect the position of each person in the queue. A higher k_i means that this person should be placed further back in the queue relative to others with the same or greater height."
    },
    {
      "content": "Think about sorting the people array. What would be a good way to sort the people to facilitate the reconstruction? Try sorting by height in descending order and then by k_i in ascending order."
    },
    {
      "content": "After sorting, you will need to reconstruct the queue. Consider using an empty list to build the queue. How can you insert each person into this list based on their k_i value?"
    },
    {
      "content": "When inserting a person into the queue, remember that k_i indicates the number of people in front of them who are taller or of the same height. This means you need to find the correct index to insert them."
    },
    {
      "content": "As you build the queue, think about how list insertion works in your chosen programming language. In Python, for example, you can use list.insert(index, value) to place a person at the correct position."
    },
    {
      "content": "Consider edge cases where multiple people have the same height. How does your sorting strategy handle these cases? Ensure that people with the same height are ordered correctly based on their k_i value."
    },
    {
      "content": "Remember to handle the constraints of the problem. You are guaranteed that the queue can be reconstructed, but ensure your solution can handle the maximum input size efficiently."
    },
    {
      "content": "After constructing the queue, double-check that the output format matches the requirements. You need to return the queue as an array of pairs, where each pair represents a person."
    },
    {
      "content": "Finally, implement your solution step by step. Start with sorting the array, then proceed to build the queue, ensuring you respect the k_i values during insertion. Test your solution with the provided examples."
    }
  ],
  "questionNotes": [
    "Each person is represented as [h_i, k_i].",
    "h_i is the height and k_i is the count of people in front who are taller or of the same height.",
    "Sort people by height (descending) and then by k_i (ascending).",
    "Insert each person into the queue based on their k_i value.",
    "The output should be in the format of an array of pairs, where each pair represents a person."
  ]
}