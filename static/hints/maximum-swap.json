{
  "hints": [
    {
      "content": "Start by converting the integer `num` into a string or an array of its digits. This will allow you to easily access and manipulate individual digits."
    },
    {
      "content": "Think about how swapping two digits can help you maximize the number. Consider which digits are larger and where they are located in relation to each other."
    },
    {
      "content": "To find the maximum number, you need to identify the leftmost digit that can be swapped with a larger digit to its right. This will help you achieve the highest possible value."
    },
    {
      "content": "Keep track of the last occurrence of each digit (0-9) as you iterate through the digits. This will help you quickly find the largest digit available for swapping."
    },
    {
      "content": "As you iterate through the digits, for each digit, check if there is a larger digit available to its right. If you find one, note the positions of both digits for a potential swap."
    },
    {
      "content": "Consider edge cases where the number is already maximized (like 9973). In such cases, no swap should be performed, and you should return the original number."
    },
    {
      "content": "When you identify a valid swap, ensure you only perform it once. After the swap, you can convert the digits back to an integer and return the result."
    },
    {
      "content": "Be careful with leading zeros. If your swap results in a leading zero, that could lead to an invalid number, so handle that case appropriately."
    },
    {
      "content": "You should also consider the constraints of the problem. The maximum value of `num` is 10^8, which means you will be dealing with at most 9 digits."
    },
    {
      "content": "Finally, think about how to implement the swap in your code. You could use a temporary variable or directly swap the elements in the array of digits. Make sure to convert back to an integer before returning."
    }
  ],
  "questionNotes": [
    "Constraints: 0 <= num <= 10^8",
    "You can swap two digits at most once.",
    "Return the maximum valued number after the swap.",
    "If no swap can increase the value, return the original number."
  ]
}