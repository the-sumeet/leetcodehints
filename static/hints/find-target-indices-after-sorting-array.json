{
  "hints": [
    {
      "content": "Start by understanding the problem statement clearly. You need to find the indices of a target element in a sorted version of the given array. What does it mean to sort the array in non-decreasing order?"
    },
    {
      "content": "Remember that the indices you return must correspond to the sorted version of the array. Think about how sorting affects the positions of elements. Can you visualize how the indices change after sorting?"
    },
    {
      "content": "Consider how you can sort the array. In most programming languages, there are built-in functions to sort arrays. What would the sorted array look like for the example [1, 2, 5, 2, 3]?"
    },
    {
      "content": "Once you have the sorted array, think about how to find the indices of the target element. You can iterate through the sorted array and check where the target appears. How would you keep track of those indices?"
    },
    {
      "content": "Pay attention to the constraints given in the problem. The length of the array is at least 1 and at most 100. This means your solution can afford to be straightforward without performance concerns."
    },
    {
      "content": "Consider edge cases, such as when the target element does not exist in the array. What should your function return in this case? Make sure to handle this scenario appropriately."
    },
    {
      "content": "Think about how to maintain the order of indices. When you find the target indices, ensure they are sorted as required by the problem statement. Will your method of collecting indices naturally keep them in order?"
    },
    {
      "content": "You might want to use a list to store the indices of the target elements. After iterating through the sorted array, how will you return this list? Remember to return an empty list if no indices were found."
    },
    {
      "content": "As a next step, implement the sorting of the array and the logic to find the target indices. You can use a simple loop to check each element against the target after sorting."
    },
    {
      "content": "Finally, ensure your function adheres to the return format specified in the problem. The output must be a list of indices in increasing order. How will you structure your return statement?"
    }
  ],
  "questionNotes": [
    "The array is 0-indexed.",
    "You must return indices in the order they appear in the sorted array.",
    "If the target does not exist in the array, return an empty list.",
    "The output list must be sorted in increasing order."
  ]
}