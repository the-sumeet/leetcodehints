{
  "hints": [
    {
      "content": "Start by understanding the structure of a linked list. Each node contains a value and a pointer to the next node. You will need to traverse the list to identify sequences of nodes that sum to zero."
    },
    {
      "content": "Consider how you can keep track of the cumulative sum of the nodes as you traverse the linked list. This will help you identify when a sequence of nodes sums to zero."
    },
    {
      "content": "You might want to use a hash map (or dictionary) to store the cumulative sums and their corresponding nodes. This can help you find the start of a zero-sum sequence efficiently."
    },
    {
      "content": "As you traverse the linked list, update the cumulative sum and check if this sum has been seen before. If it has, you have found a zero-sum sequence."
    },
    {
      "content": "When you find a zero-sum sequence, you need to remove all nodes in that sequence. This involves adjusting the pointers of the nodes before and after the sequence."
    },
    {
      "content": "Think about how to handle cases where the zero-sum sequence might be at the beginning or the end of the list. You need to ensure that the head of the list is updated correctly."
    },
    {
      "content": "Remember that after removing a zero-sum sequence, you need to continue checking the list for new zero-sum sequences. This may require looping through the list multiple times."
    },
    {
      "content": "Consider edge cases such as a linked list with only one node or a list where all nodes sum to zero. How will your approach handle these situations?"
    },
    {
      "content": "You may want to implement a two-pass approach: first, find all zero-sum sequences and mark them for removal, and then create a new list without those nodes."
    },
    {
      "content": "As a final step, ensure that your function returns the head of the modified linked list. You might need to handle cases where the head itself was part of a zero-sum sequence."
    }
  ],
  "questionNotes": [
    "The linked list contains between 1 and 1000 nodes.",
    "Node values range from -1000 to 1000.",
    "You may return any valid linked list that meets the criteria after removing zero-sum sequences."
  ]
}