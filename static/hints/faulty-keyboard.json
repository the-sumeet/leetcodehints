{
  "hints": [
    {
      "content": "Start by understanding how to iterate through each character in the string. You can use a simple loop to go through the string one character at a time."
    },
    {
      "content": "Remember that you need to maintain the current state of the string as you type each character. Think about using a list or a string variable to store the characters typed so far."
    },
    {
      "content": "When you encounter the character 'i', you need to reverse the current string. Consider how you would reverse a string in your chosen programming language."
    },
    {
      "content": "Make sure to handle the case where 'i' appears multiple times. Each time you type 'i', the current string should be reversed again. Think about how this affects the order of characters."
    },
    {
      "content": "Consider initializing an empty list to hold the characters typed so far. You can append characters to this list and convert it back to a string when needed."
    },
    {
      "content": "As you build your solution, keep in mind that the final output should be a single string. After processing all characters, you will need to join your list of characters back into a string."
    },
    {
      "content": "Don't forget to test your solution with edge cases, such as strings that contain multiple 'i' characters in succession or strings that are very short."
    },
    {
      "content": "You can use Python's slicing feature to reverse a string easily. For example, `reversed_string = current_string[::-1]` will give you the reversed version."
    },
    {
      "content": "Think about the time complexity of your solution. Each reversal operation will take linear time, so consider how you can minimize the number of reversals you perform."
    },
    {
      "content": "Finally, ensure that your function returns the final string after processing all characters. Remember to handle the return format correctly."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= s.length <= 100",
    "s consists of lowercase English letters.",
    "s[0] != 'i' (the first character will never be 'i')"
  ]
}