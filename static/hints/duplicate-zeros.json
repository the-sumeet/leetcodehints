{
  "hints": [
    {
      "content": "Start by understanding the problem: you need to duplicate every zero in the array and shift the subsequent elements to the right. However, you should not exceed the original length of the array."
    },
    {
      "content": "Consider how you can traverse the array. You might want to look for zeros and keep track of how many zeros you encounter as you iterate through the array."
    },
    {
      "content": "Think about how duplicating a zero affects the indices of the array. If you duplicate a zero, the elements that follow it will need to be shifted to the right."
    },
    {
      "content": "You can use a two-pass approach: the first pass to count the zeros and determine the final positions of elements, and the second pass to fill in the values from the end of the array back to the start."
    },
    {
      "content": "When counting zeros, keep in mind that each zero will take up an additional space. For example, if you have 2 zeros, they will take up 2 spaces, which means you need to adjust your index accordingly."
    },
    {
      "content": "Make sure to handle the case where the number of zeros causes the array to overflow. For example, if you have a zero at the last position, duplicating it would go out of bounds."
    },
    {
      "content": "You might want to use a temporary variable to store the value of the current index while iterating backward through the array. This helps you correctly place elements without overwriting them."
    },
    {
      "content": "Remember that you need to modify the array in place. This means you cannot use additional data structures like lists or arrays to hold the new values."
    },
    {
      "content": "As you implement your solution, be careful with the indexing. Ensure that when you duplicate a zero, you are not accessing indices that are out of bounds."
    },
    {
      "content": "Try to outline your approach before coding. For example, you might say: 'Count zeros, calculate new positions, and fill the array from the end to the start.' This will help clarify your thought process."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= arr.length <= 10^4",
    "Values: 0 <= arr[i] <= 9",
    "Modify the array in place; do not return anything.",
    "Elements beyond the length of the original array should not be written."
  ]
}