{
  "hints": [
    {
      "content": "Start by understanding how to calculate the interval between two indices in the array. The interval is simply the absolute difference between their indices: |i - j|."
    },
    {
      "content": "Consider how you can group the indices of identical elements together. This will help you efficiently compute the intervals for each element in the array."
    },
    {
      "content": "You may want to use a dictionary to map each unique value in the array to a list of its indices. This will allow you to easily access all indices of identical elements."
    },
    {
      "content": "When calculating the sum of intervals for a specific index, remember that you need to consider all other indices where the same value appears. Think about how to iterate through these indices."
    },
    {
      "content": "To compute the sum of intervals efficiently, consider the contribution of each index to the total interval sum. You can separate the indices into those before and after the current index."
    },
    {
      "content": "For an index `i`, you can calculate the total interval contribution from indices before `i` and from indices after `i`. This can help you avoid recalculating intervals multiple times."
    },
    {
      "content": "Think about how prefix sums or cumulative sums might help you in calculating the total distances efficiently. This can reduce the time complexity of your solution."
    },
    {
      "content": "Keep in mind the constraints of the problem. The array length can go up to 100,000, so your solution should ideally be linear or linearithmic in complexity."
    },
    {
      "content": "Donâ€™t forget to handle edge cases, such as when an element appears only once in the array. In such cases, the interval sum for that element should be zero."
    },
    {
      "content": "As a final step, implement the logic to sum the intervals for each index based on the indices collected in your dictionary. Ensure you return the result in the specified format."
    }
  ],
  "questionNotes": [
    "The input array is 0-indexed.",
    "The output should be an array of the same length as the input.",
    "Each element in the output array represents the sum of intervals for the corresponding index in the input array.",
    "Consider both the indices before and after the current index when calculating intervals.",
    "The constraints allow for up to 100,000 elements in the input array."
  ]
}