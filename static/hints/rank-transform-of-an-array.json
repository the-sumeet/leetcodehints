{
  "hints": [
    {
      "content": "Start by understanding how to determine the rank of each element in the array. The rank of an element is based on its position when the array is sorted. Consider how you would sort the array first."
    },
    {
      "content": "Think about how to handle duplicate values. If two elements are the same, they should receive the same rank. Make sure your solution accounts for this tie-breaking rule."
    },
    {
      "content": "You might want to create a sorted version of the array to help you determine the ranks. How would you go about sorting the array while keeping track of the original indices?"
    },
    {
      "content": "Consider using a data structure that allows you to map each unique element to its rank. A dictionary or a hash map could be useful for this purpose."
    },
    {
      "content": "After sorting the array, iterate through the sorted elements and assign ranks. Remember to check if the current element is the same as the previous one to assign the same rank."
    },
    {
      "content": "Don't forget to return the ranks in the order of the original array. You will need to map the ranks back to the original indices."
    },
    {
      "content": "Think about edge cases, such as an empty array. What should your function return in such a case? Ensure that your solution handles this gracefully."
    },
    {
      "content": "When implementing your solution, remember to keep the time complexity in mind. Sorting the array will take O(n log n), but how can you ensure the rest of your operations remain efficient?"
    },
    {
      "content": "You can use the `enumerate` function in Python to keep track of original indices while sorting. This will help you reconstruct the ranks in the original order after sorting."
    },
    {
      "content": "As a final step, ensure your output format matches the requirements. You should return an array of integers representing the ranks, with each rank corresponding to the original elements."
    }
  ],
  "questionNotes": [
    "Constraints: 0 <= arr.length <= 10^5",
    "-10^9 <= arr[i] <= 10^9",
    "Rank is an integer starting from 1.",
    "If two elements are equal, their rank must be the same.",
    "Return the ranks in the order of the original array."
  ]
}