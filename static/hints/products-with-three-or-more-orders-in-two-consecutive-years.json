{
  "hints": [
    {
      "content": "Start by understanding the structure of the data provided. You have a list of orders, each containing an order ID, product ID, quantity, and purchase date. Focus on how you can group these orders by product ID."
    },
    {
      "content": "Consider how to extract the year from the purchase date. You can use date manipulation functions available in your programming language to convert the date string into a date object and then retrieve the year."
    },
    {
      "content": "Once you have the year, think about how you can count the number of orders for each product in each year. You might want to use a dictionary or a similar data structure to store counts with keys as tuples of (product_id, year)."
    },
    {
      "content": "As you count the orders, remember that you need to check for consecutive years. This means you should keep track of the years you've seen for each product and ensure they are sequential."
    },
    {
      "content": "After counting the orders, filter the results to find products that have at least three orders in two consecutive years. You can iterate through your dictionary and check the counts for each pair of consecutive years."
    },
    {
      "content": "Think about edge cases, such as products that only have orders in one year or products with exactly three orders spread across multiple years. How will your logic handle these scenarios?"
    },
    {
      "content": "When checking for consecutive years, remember to handle the case where there might be gaps in the years. For example, if a product has orders in 2020 and 2022, it should not be counted."
    },
    {
      "content": "Consider how you will return the final result. You might want to return a list of product IDs that meet the criteria. Make sure to format the output correctly, as specified in the problem statement."
    },
    {
      "content": "You may want to sort the final list of product IDs before returning them. Think about whether the order matters and how you can achieve that with your data structure."
    },
    {
      "content": "Finally, ensure that your solution is efficient. Consider the time complexity of your approach, especially if the number of orders is large. Aim for a solution that processes the data in a single pass where possible."
    }
  ],
  "questionNotes": [
    "Focus on grouping orders by product ID and year.",
    "Extract the year from the purchase date correctly.",
    "Count orders using a dictionary with (product_id, year) as keys.",
    "Check for consecutive years while counting.",
    "Handle edge cases like products with orders in only one year.",
    "Return a list of product IDs that meet the criteria.",
    "Sort the final output if required."
  ]
}