{
  "hints": [
    {
      "content": "Start by understanding what an odd number is. An integer is odd if it ends with one of the digits: 1, 3, 5, 7, or 9. This means you should focus on the last character of any substring you consider."
    },
    {
      "content": "Remember that you need to find the largest odd integer substring. This implies you should not only check for odd numbers but also keep track of the largest one you find."
    },
    {
      "content": "Consider how you can generate substrings from the given string. You can use two nested loops: the outer loop to choose the starting index and the inner loop to choose the ending index of the substring."
    },
    {
      "content": "While generating substrings, check each substring's last character to see if it's odd. If it is, compare it with the largest odd number you've found so far."
    },
    {
      "content": "Instead of generating all possible substrings, think about optimizing your approach. You only need to check the odd digits and consider the entire string up to that point as a candidate if the last digit is odd."
    },
    {
      "content": "Pay attention to edge cases. For instance, if the input string consists entirely of even digits, you should return an empty string. Make sure your solution handles this case."
    },
    {
      "content": "When you find an odd digit, remember to consider the substring from the start of the string to that digit. This could potentially be the largest odd number."
    },
    {
      "content": "To keep track of the largest odd number found, you can use a variable initialized to an empty string. Update this variable whenever you find a larger odd substring."
    },
    {
      "content": "After iterating through the string, check if your largest odd number variable is still empty. If it is, return an empty string; otherwise, return the largest odd number found."
    },
    {
      "content": "Finally, ensure that your solution runs efficiently, especially since the input string can be as long as 100,000 characters. Aim for a solution that processes the string in a single pass or with minimal overhead."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= num.length <= 10^5",
    "num only consists of digits and does not contain any leading zeros.",
    "Return format: A non-empty substring or an empty string if no odd integer exists."
  ]
}