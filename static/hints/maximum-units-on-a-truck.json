{
  "hints": [
    {
      "content": "Start by understanding the structure of the input. You have a 2D array where each element contains two values: the number of boxes and the units per box. Make sure you can access these values correctly."
    },
    {
      "content": "Consider how you can maximize the total units on the truck. Think about which boxes provide the most units per box. Sorting the box types based on units per box might be a good strategy."
    },
    {
      "content": "Before you implement sorting, think about the truck's capacity. The truck can only hold a limited number of boxes, defined by the truckSize. How will this affect your selection of box types?"
    },
    {
      "content": "When sorting the box types, remember to sort them in descending order based on the number of units per box. This will help you prioritize boxes that provide the most units."
    },
    {
      "content": "As you iterate through the sorted box types, keep a running total of the units you can load onto the truck. Use a variable to track how many boxes you have loaded so far."
    },
    {
      "content": "Make sure to check if adding a full box type exceeds the truckSize. If it does, you will need to only take a portion of that box type to fill the truck to its capacity."
    },
    {
      "content": "Consider edge cases, such as when truckSize is 0. What should your function return in that case? Ensure your solution handles this gracefully."
    },
    {
      "content": "Also, think about cases where all box types have the same number of units per box. How will your sorting and selection process work in this scenario?"
    },
    {
      "content": "As you implement your solution, keep track of the total units added to ensure you return the correct value. You might want to use a loop that continues until the truckSize is reached."
    },
    {
      "content": "Finally, remember to return the total number of units once you've filled the truck as much as possible. Ensure your return statement is correctly placed after your calculations."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= boxTypes.length <= 1000",
    "1 <= numberOfBoxes[i], numberOfUnitsPerBox[i] <= 1000",
    "1 <= truckSize <= 10^6",
    "The truck can carry a maximum of truckSize boxes.",
    "Return the maximum total number of units that can be loaded onto the truck."
  ]
}