{
  "hints": [
    {
      "content": "Start by understanding what a 'move' means in this context. A move allows you to increment or decrement any element of the array by 1. Think about how this affects the overall array and the target value you want to reach."
    },
    {
      "content": "Consider the implications of choosing a target value to equalize all elements. If you choose a number that is too high or too low, you may end up making more moves than necessary. What could be a good candidate for this target value?"
    },
    {
      "content": "One effective strategy is to think about the median of the array. The median minimizes the total distance to all other points in a one-dimensional space. How can you calculate the median of the array?"
    },
    {
      "content": "When calculating the median, remember that it can be different based on whether the number of elements is odd or even. How would you handle both cases when finding the median?"
    },
    {
      "content": "Once you have the median, you can compute the total number of moves required to make all elements equal to this median. This involves summing up the absolute differences between each element and the median."
    },
    {
      "content": "To compute the total moves, you can use a loop to iterate through the array and accumulate the differences. Consider using a function that computes the absolute difference between two numbers."
    },
    {
      "content": "Think about edge cases. For example, what happens if all elements in the array are already equal? How would your approach handle this situation?"
    },
    {
      "content": "Remember to consider the constraints given in the problem. The array can have up to 100,000 elements, and the values can be quite large. How might this affect your choice of algorithm?"
    },
    {
      "content": "As you implement your solution, ensure that you handle the input and output formats correctly. You need to return a single integer representing the minimum number of moves."
    },
    {
      "content": "Try to outline the steps of your solution before coding. A possible outline could be: 1) Find the median, 2) Calculate the total moves to the median, 3) Return the result. This will help you stay organized."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= nums.length <= 100,000",
    "-10^9 <= nums[i] <= 10^9",
    "Return format: A single integer representing the minimum number of moves."
  ]
}