{
  "hints": [
    {
      "content": "Start by considering the base cases for the function. What should you return if one of the trees is null? Think about what it means for two trees to be the same."
    },
    {
      "content": "If both trees are empty (null), they are considered the same. What about if one tree is null and the other is not? This will help you define your base case."
    },
    {
      "content": "Next, check if the values of the current nodes in both trees are the same. If they are not, you can conclude that the trees are different."
    },
    {
      "content": "Once you've checked the current nodes, you need to check their children. How would you recursively check if the left children of both trees are the same?"
    },
    {
      "content": "Think about how you would also check the right children of both trees. You will need to combine the results of both checks to determine if the trees are the same."
    },
    {
      "content": "Consider the structure of your recursive function. You might want to define a helper function that takes two nodes as parameters and performs the checks."
    },
    {
      "content": "Remember to handle the recursive calls properly. You will need to call your helper function for both the left and right children of the current nodes."
    },
    {
      "content": "As you implement your function, think about the time complexity. Given the constraints, how will your solution perform with the maximum number of nodes?"
    },
    {
      "content": "Make sure to test your function with edge cases, such as both trees being empty, one tree being empty, and trees with different structures but the same values."
    },
    {
      "content": "Your final function should return true if all checks pass and false if any check fails. You are very close to the complete solution; just ensure your recursive logic is sound."
    }
  ],
  "questionNotes": [
    "Two binary trees are the same if they are structurally identical and nodes have the same value.",
    "Consider edge cases where one or both trees are null.",
    "The number of nodes in both trees is in the range [0, 100].",
    "Node values are constrained between -10^4 and 10^4."
  ]
}