{
  "hints": [
    {
      "content": "Start by understanding the operation applied to the array. For each element, you need to check if it is equal to the next element. If they are equal, you will modify the current element and set the next one to zero."
    },
    {
      "content": "Remember that the operations are applied sequentially from the start of the array to the second last element. This means that the changes you make in one operation can affect the next operation."
    },
    {
      "content": "Think about how you will handle the condition where `nums[i]` is equal to `nums[i + 1]`. What happens to the values of these elements after you perform the operation?"
    },
    {
      "content": "Keep in mind that after performing all operations, you need to shift all zeros to the end of the array. Consider how you can efficiently do this without needing to create a new array."
    },
    {
      "content": "When shifting zeros, you can use a two-pointer technique: one pointer to track the position to place non-zero elements and another to iterate through the array."
    },
    {
      "content": "Make sure to account for edge cases, such as when the array is already filled with zeros or when there are no equal adjacent elements."
    },
    {
      "content": "You might want to create a loop that goes through the array and applies the operations, but ensure that you only modify the array when the condition is met."
    },
    {
      "content": "Consider using a single pass for the operation application and then a separate pass for shifting zeros. This separation can help manage complexity."
    },
    {
      "content": "As you implement the operation, remember to update the index correctly after modifying elements to avoid skipping checks on newly modified values."
    },
    {
      "content": "Finally, after all operations are applied, implement the logic to shift zeros to the end. You can do this by iterating through the array and collecting non-zero elements first, then filling the rest with zeros."
    }
  ],
  "questionNotes": [
    "Constraints: 2 <= nums.length <= 2000",
    "Values: 0 <= nums[i] <= 1000",
    "Operations are applied sequentially, not all at once.",
    "Return the modified array after shifting all zeros to the end."
  ]
}