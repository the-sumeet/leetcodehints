{
  "hints": [
    {
      "content": "Start by thinking about the order of characters in the string. You only have 'a' and 'b'. What does it mean for every 'a' to appear before every 'b'?"
    },
    {
      "content": "Consider how you would traverse the string. You might want to keep track of whether you've encountered a 'b' yet. What would happen if you see an 'a' after a 'b'?"
    },
    {
      "content": "As you iterate through the string, think about using a flag or a state variable. This variable could indicate whether you've already seen a 'b'."
    },
    {
      "content": "What happens if you encounter a 'b' before you have seen any 'a'? Would that immediately indicate a false condition?"
    },
    {
      "content": "Remember to handle edge cases. For example, what if the string contains only 'a's or only 'b's? How does that affect your logic?"
    },
    {
      "content": "You might want to use a single pass through the string to check the condition. This means you should avoid nested loops for efficiency."
    },
    {
      "content": "Think about how you can use a loop to check each character. If you find a 'b', you should mark it and then check subsequent characters for any 'a's."
    },
    {
      "content": "Consider the return value. What should you return if you find an 'a' after a 'b'? Ensure your return statement reflects this logic."
    },
    {
      "content": "You can use a simple boolean variable to track if you've seen a 'b'. If you see an 'a' after that, you should return false."
    },
    {
      "content": "Finally, your function should return true if you finish checking all characters without finding an 'a' after a 'b'. Make sure to test your function with various inputs."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= s.length <= 100",
    "s[i] is either 'a' or 'b'",
    "Return true if every 'a' appears before every 'b'; otherwise, return false.",
    "Consider edge cases: strings with only 'a's or only 'b's."
  ]
}