{
  "hints": [
    {
      "content": "Start by thinking about what it means to perform a 'move'. You can change any number in the array to any other value. This flexibility allows you to manipulate the maximum and minimum values effectively."
    },
    {
      "content": "Consider the size of the array. If the length of `nums` is less than or equal to 4, think about how you can make every number the same with your allowed moves. What would the difference be then?"
    },
    {
      "content": "When you have more than 4 elements, focus on the largest and smallest elements. You can change up to three of them. What happens if you change the three largest or three smallest values?"
    },
    {
      "content": "Sort the array first. This will help you easily identify the largest and smallest values. After sorting, the smallest value will be at the beginning and the largest at the end."
    },
    {
      "content": "After sorting, if you can change three numbers, consider the different scenarios: changing the three largest values, the three smallest values, or a combination of both. How would these changes affect the difference?"
    },
    {
      "content": "Think about the edge cases. For example, if all numbers are the same, what would the result be? Or if there are very large and very small numbers, how can you minimize the difference effectively?"
    },
    {
      "content": "You can calculate the potential minimum differences by considering the following scenarios after sorting: \n- Change the three largest numbers \n- Change the three smallest numbers \n- Change two largest and one smallest \n- Change two smallest and one largest"
    },
    {
      "content": "Remember that you can only perform a maximum of three moves. If the array has more than 4 elements, you will always be left with at least one of the smallest or largest values. How does this fact influence your final calculations?"
    },
    {
      "content": "Once you have calculated the potential differences from the scenarios, determine the minimum of these differences. This will give you the answer you need."
    },
    {
      "content": "Finally, make sure to handle edge cases carefully, such as when the array has duplicate values or when all values are the same. These cases can sometimes lead to unexpected results."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= nums.length <= 10^5",
    "Range of nums[i]: -10^9 <= nums[i] <= 10^9",
    "You can perform at most three moves.",
    "Return the minimum difference between the largest and smallest values after the moves.",
    "If the length of nums is less than or equal to 4, you can make all elements the same."
  ]
}