{
  "hints": [
    {
      "content": "Start by understanding the structure of the input. You have a list of items, where each item is represented as a pair [price, weight]. Make sure you can access both the price and weight of each item."
    },
    {
      "content": "Consider the maximum weight capacity of the bag. This is the limit on how much weight you can carry, and it will be crucial in deciding which items to select."
    },
    {
      "content": "Think about the concept of value-to-weight ratio. Items with a higher ratio should generally be prioritized when filling the bag. How would you calculate this for each item?"
    },
    {
      "content": "You might want to sort the items based on their value-to-weight ratio before making any selections. How would you implement this sorting step?"
    },
    {
      "content": "As you iterate through the sorted items, keep track of the total weight and total price. What conditions will you check to ensure you do not exceed the maximum weight?"
    },
    {
      "content": "Consider edge cases, such as when the maximum weight is zero or when all items are heavier than the maximum weight. How should your function handle these scenarios?"
    },
    {
      "content": "If you encounter an item that exceeds the remaining capacity of the bag, think about how you can handle that. Should you skip it, or is there a way to include part of it?"
    },
    {
      "content": "Remember to maintain a running total of the price as you add items to the bag. How will you return this total price at the end of your function?"
    },
    {
      "content": "You may need to consider whether the items can be taken in fractional amounts or if they must be taken whole. Clarify this before proceeding with your logic."
    },
    {
      "content": "Finally, ensure your implementation correctly handles the return format. What should your function return if no items can be added to the bag, or if the bag is filled to capacity?"
    }
  ],
  "questionNotes": [
    "Input is a list of pairs [price, weight].",
    "Maximum weight capacity is given as an integer.",
    "Consider edge cases like zero capacity and all items being too heavy.",
    "Clarify whether items can be taken fractionally or must be whole."
  ]
}