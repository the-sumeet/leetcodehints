{
  "hints": [
    {
      "content": "Start by understanding the requirement for distinct integers in each row of the 2D array. You will need to track which numbers have already been placed in the current row to ensure they remain unique."
    },
    {
      "content": "Consider using a data structure that allows you to efficiently check for the existence of an integer. A set can be useful for this purpose, as it provides average O(1) time complexity for lookups."
    },
    {
      "content": "Think about how you can iterate through the input array `nums`. As you process each number, determine if it can be added to the current row or if you need to start a new row."
    },
    {
      "content": "Remember that the goal is to minimize the number of rows in the 2D array. This means you should try to fill each row as much as possible before moving on to the next one."
    },
    {
      "content": "You may want to maintain a list of rows as you build the 2D array. Each time you start a new row, append it to this list."
    },
    {
      "content": "As you process each number, if it is not already in the current row's set, add it. If it is present, it indicates that you need to start a new row."
    },
    {
      "content": "Consider edge cases such as when all elements in `nums` are the same. How would you handle this situation to ensure each row contains distinct integers?"
    },
    {
      "content": "When you finish processing the array, ensure that all elements have been accounted for in the 2D array. Check that you haven't missed any numbers from `nums`."
    },
    {
      "content": "You might want to think about how to structure your loops. A single loop through `nums` with nested logic for managing rows could be effective."
    },
    {
      "content": "Finally, remember to return the 2D array in the correct format. Ensure that it is structured as a list of lists, where each inner list represents a row with distinct integers."
    }
  ],
  "questionNotes": [
    "Each row must contain distinct integers.",
    "The number of rows should be minimal.",
    "Return format is a 2D array (list of lists).",
    "Constraints: 1 <= nums.length <= 200; 1 <= nums[i] <= nums.length."
  ]
}