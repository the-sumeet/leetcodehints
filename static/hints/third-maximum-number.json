{
  "hints": [
    {
      "content": "Start by understanding the problem requirements. You need to find the third distinct maximum number in the array. If it doesn't exist, return the maximum number instead."
    },
    {
      "content": "Consider how to handle duplicates in the array. Since you need distinct maximums, think about how you can filter out duplicates from the input array."
    },
    {
      "content": "A good approach might be to use a data structure that inherently manages uniqueness. For example, a set can be used to store distinct values easily."
    },
    {
      "content": "After filtering for distinct values, you will need to determine the maximums. Think about how you can sort or iterate through the remaining distinct values to find the first, second, and third maximums."
    },
    {
      "content": "Remember that if the length of the distinct values is less than three, you should return the maximum value instead. How will you check the size of your distinct values collection?"
    },
    {
      "content": "Consider the time complexity of your solution. The problem hints at an O(n) solution, so think about how you can achieve this without sorting the entire array."
    },
    {
      "content": "You might want to maintain a few variables to track the first, second, and third maximums as you iterate through the array. How will you update these variables when you encounter a new number?"
    },
    {
      "content": "When iterating through the array, ensure you only update your maximums if the current number is greater than the maximums you have already found. This will help you maintain the distinct maximums."
    },
    {
      "content": "As you implement your solution, be careful with edge cases such as arrays with fewer than three distinct numbers. Make sure to test these cases to ensure your logic holds."
    },
    {
      "content": "Finally, consider how you will return the result. If you have found a third maximum, return it; otherwise, return the maximum value you tracked. Make sure your return statement is clear."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= nums.length <= 10^4",
    "-2^31 <= nums[i] <= 2^31 - 1",
    "You need to find distinct maximums, so duplicates are not counted multiple times.",
    "If the third maximum does not exist, return the maximum number.",
    "Pay attention to the return format: it should be an integer."
  ]
}