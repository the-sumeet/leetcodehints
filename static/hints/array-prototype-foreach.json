{
  "hints": [
    {
      "content": "Start by understanding the purpose of the `forEach` method. It iterates over each element in an array, allowing you to perform operations on each element based on its value, index, and the original array."
    },
    {
      "content": "Consider how the callback function is structured. It takes three parameters: the current value, the index of that value, and the original array itself. Make sure you know how to access these parameters correctly."
    },
    {
      "content": "Remember that the context in which the callback function is executed can be controlled. The `this` keyword inside the function can refer to different values based on the context parameter provided."
    },
    {
      "content": "Think about how you can modify the original array. The callback function should directly change the elements of the array based on the operations you define. For example, if you want to double the values, you could use `arr[i] = val * 2`."
    },
    {
      "content": "Pay attention to the `context` parameter. If it is set to `true`, `this` inside the function will refer to the global object. If it is `false`, `this` will be `undefined` in strict mode. How will this affect your function?"
    },
    {
      "content": "Consider edge cases, such as when the array is empty or contains non-numeric values. How should your function handle these scenarios? Will it still perform the intended operation?"
    },
    {
      "content": "Test your function with different types of arrays. For instance, what happens if the array contains boolean values or strings? Ensure your function can handle various data types gracefully."
    },
    {
      "content": "When modifying the array, be cautious about how you access the elements. If you modify the array while iterating, it may lead to unexpected results. Think about whether you need to create a copy of the array first."
    },
    {
      "content": "Remember that the return value of the `forEach` method is `undefined`. Your focus should be on modifying the original array rather than returning a new array or value."
    },
    {
      "content": "To get closer to a solution, start implementing the basic structure of your function. Set up the loop to iterate through the array, and ensure you can access the parameters correctly. Then, apply your intended operation inside the loop."
    }
  ],
  "questionNotes": [
    "The callback function must modify the original array directly.",
    "The context parameter affects the value of `this` inside the callback function.",
    "The function should handle various data types and edge cases, like empty arrays.",
    "The return value of `forEach` is always `undefined`."
  ]
}