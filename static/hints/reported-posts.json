{
  "hints": [
    {
      "content": "Start by understanding the structure of the input data. You have a 'headers' object and a 'rows' object, where 'rows' contains an array of actions. Each action has multiple attributes like 'user_id', 'post_id', 'action_date', etc."
    },
    {
      "content": "Focus on the actions that are relevant to your task. In this case, the 'report' action is crucial. You need to filter out the actions to only consider those that are reports."
    },
    {
      "content": "Think about how to store the information you need. You might want to use a dictionary or a hashmap to keep track of the reports for each post. The keys could be 'post_id' and the values could be a list of reasons for reporting."
    },
    {
      "content": "Consider how to handle multiple reports for the same post. If a post has multiple reports, you might want to aggregate these reports by their reasons. This will help in determining the most common report reasons."
    },
    {
      "content": "Pay attention to the uniqueness of reports. If a user reports the same post multiple times with the same reason, decide if you want to count it once or multiple times. This could affect your final output."
    },
    {
      "content": "Think about how to format your output. You might want to return a list of posts with their corresponding report reasons and counts. Ensure that your output is structured clearly."
    },
    {
      "content": "Consider edge cases such as no reports at all. How will your code handle situations where there are no 'report' actions? Make sure to return an appropriate response in such cases."
    },
    {
      "content": "When aggregating report reasons, think about sorting them. You might want to sort the reasons by their frequency or alphabetically if frequencies are tied. This will help in presenting the most relevant reports first."
    },
    {
      "content": "As you build your solution, remember to iterate through the actions carefully. A nested loop might be necessary if you are comparing reports from different users on the same post."
    },
    {
      "content": "Finally, ensure that your solution efficiently handles larger datasets. Consider the time complexity of your approach and optimize where possible, especially when filtering and aggregating reports."
    }
  ],
  "questionNotes": [
    "The input data is structured with 'headers' and 'rows'. Focus on the 'Actions' array within 'rows'.",
    "Only the 'report' actions are relevant for the solution.",
    "Handle multiple reports from the same user for the same post carefully.",
    "Output should clearly show the post_id, report reasons, and their counts.",
    "Consider edge cases like no reports or multiple reasons for the same report."
  ]
}