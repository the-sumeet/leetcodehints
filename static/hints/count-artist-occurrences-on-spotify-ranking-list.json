{
  "hints": [
    {
      "content": "Start by understanding the structure of the input data. You have a list of tracks, each with an associated artist. Focus on how to access the 'artist' field from each track entry."
    },
    {
      "content": "Consider how you will iterate through the list of tracks. You might want to use a loop to go through each row in the 'rows' section of the input data."
    },
    {
      "content": "As you iterate, think about how you can keep track of the number of occurrences for each artist. A dictionary (or hashmap) could be useful here to map each artist to their count."
    },
    {
      "content": "When you encounter an artist for the first time, you should initialize their count in your dictionary. If the artist already exists, simply increment their count."
    },
    {
      "content": "Don't forget to handle case sensitivity when counting artist occurrences. For example, 'Ed Sheeran' and 'ed sheeran' should be treated as the same artist."
    },
    {
      "content": "After counting all occurrences, consider how you will return the results. You might want to return a list of artists along with their counts."
    },
    {
      "content": "Think about how to sort the results. If two artists have the same count, you might want to sort them alphabetically by their name."
    },
    {
      "content": "Make sure to handle edge cases, such as an empty input list or a list where all tracks are by the same artist. What should your output look like in these cases?"
    },
    {
      "content": "Remember to format your output correctly. If you are returning a list of artists and counts, consider what data structure will best represent this."
    },
    {
      "content": "Finally, implement the logic to combine all your thoughts. Start with an empty dictionary, loop through the tracks, count the occurrences, and prepare the final output format."
    }
  ],
  "questionNotes": [
    "Input is structured with 'headers' and 'rows'. Focus on the 'rows' for artist counting.",
    "Each track has a unique ID, track name, and artist.",
    "Case sensitivity should be handled when counting artists.",
    "Output should include artist names and their corresponding counts, possibly sorted.",
    "Consider edge cases like empty lists or all tracks by the same artist."
  ]
}