{
  "hints": [
    {
      "content": "Start by understanding how to split a sentence into words. You can use a method that splits a string by spaces. For example, in Python, you can use `sentence.split()` to get a list of words."
    },
    {
      "content": "Remember that the problem states that sentences are separated by a single space and do not have leading or trailing spaces. This means you can safely use the split method without worrying about empty strings."
    },
    {
      "content": "Once you have the words from a sentence, you can find the number of words by checking the length of the list returned by the split method. For example, `len(sentence.split())` gives you the number of words."
    },
    {
      "content": "You need to iterate over all the sentences in the given array. For each sentence, calculate the number of words and keep track of the maximum count you encounter."
    },
    {
      "content": "Consider initializing a variable to store the maximum number of words found. As you process each sentence, update this variable whenever you find a sentence with more words than the current maximum."
    },
    {
      "content": "Think about edge cases, such as when all sentences have the same number of words. The maximum should still reflect the count of words in those sentences."
    },
    {
      "content": "You might want to consider what happens if there is only one sentence in the input array. Ensure your solution handles this case correctly and returns the word count of that single sentence."
    },
    {
      "content": "Make sure to test your solution with various inputs, including sentences with the minimum and maximum lengths specified by the constraints. This will help verify that your solution is robust."
    },
    {
      "content": "When implementing the solution, remember to return the maximum word count as an integer. This is the final output of your function."
    },
    {
      "content": "As a final step, ensure your code is efficient enough to handle the upper limits of the input size, which could be up to 100 sentences with each sentence containing up to 100 characters."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= sentences.length <= 100",
    "Constraints: 1 <= sentences[i].length <= 100",
    "Sentences consist only of lowercase English letters and ' ' (spaces).",
    "No leading or trailing spaces in sentences.",
    "All words in sentences[i] are separated by a single space.",
    "Return the maximum number of words found in a single sentence."
  ]
}