{
  "hints": [
    {
      "content": "Start by understanding how to calculate the average of the first `i + 1` elements and the average of the last `n - i - 1` elements. Remember, the average is calculated using integer division, which means you should round down the result."
    },
    {
      "content": "Consider how you will handle the case when `i` is at the last index (`n - 1`). What happens to the average of the last elements in that case? Think about how to define the average of zero elements."
    },
    {
      "content": "You need to compute the absolute difference between the two averages for each index. Make sure you understand how to use the absolute value function correctly to get the difference."
    },
    {
      "content": "As you iterate through the array, keep track of the cumulative sum of the elements. This will help you efficiently compute the averages without having to sum the elements repeatedly for each index."
    },
    {
      "content": "When calculating the average of the last `n - i - 1` elements, you can derive it from the total sum of the array minus the sum of the first `i + 1` elements. This will save you computation time."
    },
    {
      "content": "Think about how to initialize your variables. You will need variables to store the minimum average difference found so far, the corresponding index, and the total sum of the array."
    },
    {
      "content": "As you calculate the average differences, remember to update your minimum average difference and index whenever you find a new minimum. If you find the same minimum, ensure you keep the smallest index."
    },
    {
      "content": "Don't forget to handle the edge case where the input array has only one element. What should your function return in that case?"
    },
    {
      "content": "Make sure to test your function with various edge cases, such as when all elements are the same or when they are in increasing or decreasing order. This will help ensure your solution is robust."
    },
    {
      "content": "Finally, focus on the return statement. You need to return the index of the minimum average difference. Ensure your function adheres to the constraints regarding the size of the input array and the values within it."
    }
  ],
  "questionNotes": [
    "1 <= nums.length <= 10^5",
    "0 <= nums[i] <= 10^5",
    "Return the smallest index in case of ties.",
    "Average of 0 elements is considered to be 0."
  ]
}