{
  "hints": [
    {
      "content": "Start by identifying the minimum and maximum elements in the array. You can use a simple loop to find these values. Remember, the array contains distinct integers, so you won't have to deal with ties."
    },
    {
      "content": "Once you have the minimum and maximum values, determine their indices in the array. This will help you calculate the number of deletions needed from either end."
    },
    {
      "content": "Consider the different ways to remove the minimum and maximum elements. You can remove them from the front, the back, or a combination of both. Think about how to calculate the number of deletions for each approach."
    },
    {
      "content": "Calculate the number of deletions needed if you remove both elements from the front. This is simply the index of the maximum element plus one if you remove the maximum first, and the index of the minimum element plus one if you remove the minimum first."
    },
    {
      "content": "Next, calculate the number of deletions needed if you remove both elements from the back. This will be the total length of the array minus the index of the minimum or maximum element."
    },
    {
      "content": "Now consider the mixed approach: removing one element from the front and the other from the back. You will need to calculate the deletions for both combinations (min from front and max from back, and vice versa)."
    },
    {
      "content": "Make sure to handle edge cases, such as when the array has only one element. In this case, you can directly return 1 since removing that single element is the only option."
    },
    {
      "content": "After calculating the number of deletions for all possible approaches, you should compare these values to find the minimum number of deletions needed."
    },
    {
      "content": "Remember to account for the fact that the indices of the minimum and maximum elements can affect the total number of deletions. Be careful with the order in which you remove the elements."
    },
    {
      "content": "Finally, implement the logic to return the minimum number of deletions. Ensure your function handles all the edge cases and adheres to the constraints provided in the problem statement."
    }
  ],
  "questionNotes": [
    "1 <= nums.length <= 10^5",
    "-10^5 <= nums[i] <= 10^5",
    "The integers in nums are distinct.",
    "Return the minimum number of deletions needed to remove both the minimum and maximum elements."
  ]
}