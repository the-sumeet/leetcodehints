{
  "hints": [
    {
      "content": "Start by understanding the data structure provided in the sample test case. You have a table with three columns: `bill_id`, `customer_id`, and `amount`. Each row represents a transaction made by a customer."
    },
    {
      "content": "Think about how you can aggregate the total spending for each customer. You will need to group the transactions by `customer_id` and sum their `amount` values."
    },
    {
      "content": "Consider how you will store the total amounts for each customer. A dictionary or a hashmap could be a good choice where the key is the `customer_id` and the value is the total amount spent."
    },
    {
      "content": "As you calculate the total amounts, remember to initialize your storage structure correctly. For each new `customer_id`, you will need to start their total from zero."
    },
    {
      "content": "Once you have the total spending for each customer, think about what defines a 'rich' customer in this context. Is it a specific threshold amount that you need to compare against?"
    },
    {
      "content": "Ensure you define the threshold for being considered 'rich'. For example, you might decide that a customer is rich if their total spending exceeds a certain value, like 1000."
    },
    {
      "content": "After identifying the rich customers, you will need to count how many unique customers meet this criterion. Pay attention to how you handle customers who may have multiple transactions."
    },
    {
      "content": "Consider edge cases where no customers meet the threshold. Your function should handle this gracefully, possibly returning zero or an empty list, depending on the requirements."
    },
    {
      "content": "As you implement your solution, think about the efficiency of your approach. Using a single pass to compute the totals and then another pass to count rich customers could be a good strategy."
    },
    {
      "content": "Finally, make sure to return the count of rich customers in the required format. If the output needs to be in a specific structure, ensure you adhere to that format before finishing."
    }
  ],
  "questionNotes": [
    "Input data is structured as a table with columns: bill_id, customer_id, amount.",
    "You need to group by customer_id to calculate total amounts.",
    "Define a threshold for what constitutes a 'rich' customer.",
    "Consider edge cases where no customers meet the threshold.",
    "Return the count of unique rich customers."
  ]
}