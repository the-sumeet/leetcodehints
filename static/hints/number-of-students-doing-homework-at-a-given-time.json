{
  "hints": [
    {
      "content": "Start by understanding the problem statement clearly. You need to find out how many students are doing their homework at a specific time, `queryTime`. Make sure you know the difference between `startTime` and `endTime`."
    },
    {
      "content": "Consider how you can iterate through the lists of `startTime` and `endTime`. You will need to check each student's time interval to see if `queryTime` falls within it."
    },
    {
      "content": "Remember that the time intervals are inclusive. This means that if `queryTime` equals either `startTime[i]` or `endTime[i]`, that student should still be counted."
    },
    {
      "content": "Think about how you can structure your loop. You might want to use a simple `for` loop to go through each index of the `startTime` and `endTime` arrays."
    },
    {
      "content": "As you loop through the arrays, you can maintain a counter that increments each time you find a student whose homework time includes `queryTime`. Consider initializing this counter to zero."
    },
    {
      "content": "Pay attention to the constraints provided in the problem. The lengths of `startTime` and `endTime` are equal, and each time value is within the range of 1 to 1000. This can help you avoid out-of-bounds errors."
    },
    {
      "content": "Think about edge cases. For instance, what if there is only one student? Or if all students have the same `startTime` and `endTime`? How will your solution handle these cases?"
    },
    {
      "content": "You can check if `queryTime` is greater than or equal to `startTime[i]` and less than or equal to `endTime[i]` using a condition within your loop. This is the core logic for counting the students."
    },
    {
      "content": "After your loop, you will return the counter that you have maintained. Make sure your return statement is correctly placed outside the loop."
    },
    {
      "content": "Finally, ensure your code is clean and handles all edge cases. You might want to test your function with various inputs to validate its correctness."
    }
  ],
  "questionNotes": [
    "Constraints: startTime.length == endTime.length",
    "1 <= startTime.length <= 100",
    "1 <= startTime[i] <= endTime[i] <= 1000",
    "1 <= queryTime <= 1000",
    "Return the count of students doing homework at queryTime."
  ]
}