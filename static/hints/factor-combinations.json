{
  "hints": [
    {
      "content": "Start by understanding what factors are. For a given number, factors are integers that can be multiplied together to produce that number. For example, the factors of 12 are 1, 2, 3, 4, 6, and 12."
    },
    {
      "content": "Consider how you can generate combinations of these factors. You need to find all unique combinations that multiply to the target number. Think about using a recursive approach to explore these combinations."
    },
    {
      "content": "When generating combinations, remember to avoid duplicates. For instance, if you have factors 2 and 6, the combination (2, 6) is the same as (6, 2) in terms of multiplication."
    },
    {
      "content": "You might want to keep track of the current combination of factors you are building. Use a list to accumulate these factors as you explore different paths in your recursion."
    },
    {
      "content": "Think about the base case for your recursion. When should you stop exploring further? A good stopping point is when the product of the current combination exceeds the target number."
    },
    {
      "content": "Consider the constraints of the problem. The factors you choose must be greater than or equal to the last factor added to the current combination to maintain uniqueness and avoid duplicates."
    },
    {
      "content": "Make sure to handle edge cases. For example, what happens if the target number is 1? What factors can you use to reach 1, and how do you represent that in your output?"
    },
    {
      "content": "As you build your solution, think about how you will return the combinations. You could use a list of lists to store all valid combinations that meet the criteria."
    },
    {
      "content": "You will need to implement a backtracking approach. After exploring a combination, remember to remove the last factor added before trying the next possible factor."
    },
    {
      "content": "Finally, ensure that your function correctly formats the output. The expected result is a list of lists, where each inner list represents a unique combination of factors that multiply to the target number."
    }
  ],
  "questionNotes": [
    "The input is a positive integer greater than 1.",
    "Each combination must be unique and factors must be greater than or equal to the last factor in the combination.",
    "The output should be a list of lists, with each inner list containing the factors that multiply to the target."
  ]
}