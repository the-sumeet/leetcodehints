{
  "hints": [
    {
      "content": "Start by understanding the input format. Each server is represented by a pair of integers, where the first integer indicates the server's current capacity and the second indicates the required capacity for an upgrade."
    },
    {
      "content": "Consider how you might determine which servers can be upgraded. You need to compare the current capacity of each server with the required capacity for an upgrade."
    },
    {
      "content": "Think about a way to iterate through the list of servers. You could use a loop to check each server's capacities one by one."
    },
    {
      "content": "As you check each server, keep track of how many servers can be upgraded. You might want to use a counter variable to do this."
    },
    {
      "content": "Don't forget to handle edge cases. What if the list of servers is empty? Make sure your solution can handle that scenario gracefully."
    },
    {
      "content": "Consider how you will return the result. The problem asks for the maximum number of upgradable servers, so your function should return an integer."
    },
    {
      "content": "You might want to think about sorting the servers based on their capacities. Sorting can help you efficiently determine the maximum number of upgrades possible."
    },
    {
      "content": "When comparing capacities, remember to check if the current capacity is greater than or equal to the required capacity for an upgrade. This is crucial for counting an upgrade as valid."
    },
    {
      "content": "If you encounter multiple servers with the same current capacity, ensure your logic correctly counts each one only once towards the upgrade count."
    },
    {
      "content": "Finally, consider edge cases with varying ranges of capacities. For example, what happens if all servers have a current capacity less than their required capacity?"
    }
  ],
  "questionNotes": [
    "Input consists of pairs of integers representing server capacities.",
    "Output should be a single integer representing the maximum number of upgradable servers.",
    "Consider empty input cases and how they should be handled.",
    "Ensure to account for servers with the same current capacity correctly."
  ]
}