{
  "hints": [
    {
      "content": "To determine if a number has exactly three positive divisors, start by recalling the definition of a divisor. A number m is a divisor of n if n can be divided by m without leaving a remainder."
    },
    {
      "content": "Consider the smallest numbers and their divisors. For example, the number 1 has only one divisor (itself), while the number 2 has two divisors (1 and 2). What do you notice about numbers with fewer than three divisors?"
    },
    {
      "content": "Think about the properties of divisors. If a number n has exactly three positive divisors, what can you infer about its prime factorization? Does it relate to prime numbers?"
    },
    {
      "content": "Recall that a prime number p has exactly two divisors: 1 and p itself. If n has three divisors, what type of number might it be related to? Consider the square of a prime number."
    },
    {
      "content": "If n is a perfect square of a prime number, say p^2, then the divisors of n would be 1, p, and p^2. Can you see how this gives exactly three divisors?"
    },
    {
      "content": "To check if n has exactly three divisors, you should first check if n is a perfect square. How would you determine if a number is a perfect square?"
    },
    {
      "content": "Once you confirm that n is a perfect square, find the integer square root of n. This will help you check if the square root is a prime number."
    },
    {
      "content": "You can use a function to check if a number is prime. Remember, a prime number is only divisible by 1 and itself. How would you implement a prime-checking function?"
    },
    {
      "content": "Combine your findings: If n is a perfect square and its square root is a prime number, then n has exactly three divisors. How would you structure your final check?"
    },
    {
      "content": "In your final implementation, ensure that you handle edge cases, such as very small numbers like 1 or 2. What will your function return for these cases?"
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= n <= 10^4",
    "Return type: Boolean (true or false)",
    "Focus on the properties of divisors and prime numbers.",
    "Consider edge cases like n = 1 and n = 2."
  ]
}