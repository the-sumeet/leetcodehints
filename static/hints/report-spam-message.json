{
  "hints": [
    {
      "content": "Start by understanding the problem. You need to check how many words from the `message` array are present in the `bannedWords` array. What should you do if you find a match?"
    },
    {
      "content": "Consider using a data structure that allows for efficient lookups. Which data structure could help you quickly check if a word from `message` exists in `bannedWords`?"
    },
    {
      "content": "Think about how you can iterate through the `message` array. You will need to count the number of matches found in `bannedWords`. How will you keep track of this count?"
    },
    {
      "content": "Remember that you only need to return true if there are at least two matches. How can you stop checking as soon as you find the second match?"
    },
    {
      "content": "Consider edge cases where `message` or `bannedWords` might have the minimum number of elements. What should your function return if there are no matches at all?"
    },
    {
      "content": "Make sure to handle cases where the same word appears multiple times in `message`. Should you count duplicates, or just unique matches?"
    },
    {
      "content": "You might want to convert `bannedWords` into a set for faster lookups. How would you do that in your chosen programming language?"
    },
    {
      "content": "As you loop through the `message`, check if each word exists in the set of `bannedWords`. What will you do with the count variable when you find a match?"
    },
    {
      "content": "Once you have your count of matches, remember to check if it is greater than or equal to 2 before returning true. What will you return if the count is less than 2?"
    },
    {
      "content": "Finally, ensure that your function handles large inputs efficiently, as both `message` and `bannedWords` can be up to 100,000 elements long. How will your approach scale?"
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= message.length, bannedWords.length <= 10^5",
    "1 <= message[i].length, bannedWords[i].length <= 15",
    "Both message[i] and bannedWords[i] consist only of lowercase English letters.",
    "Return true if there are at least two matches, otherwise return false."
  ]
}