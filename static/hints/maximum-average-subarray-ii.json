{
  "hints": [
    {
      "content": "Start by understanding the problem statement clearly. You need to find the maximum average of any contiguous subarray of a specified length, `k`, from the given array."
    },
    {
      "content": "Consider how you can calculate the average of a subarray. Remember that the average is the sum of the elements divided by the number of elements. For a subarray of length `k`, the formula is: `average = sum / k`."
    },
    {
      "content": "Think about how you can efficiently compute the sum of subarrays of length `k`. A sliding window technique might be useful here, where you maintain a running sum as you move through the array."
    },
    {
      "content": "When using the sliding window technique, initialize the sum with the first `k` elements of the array. Then, as you slide the window to the right, update the sum by subtracting the element that is leaving the window and adding the new element that is entering."
    },
    {
      "content": "Keep track of the maximum average you find as you slide through the array. You will need to compare the current average with the maximum average found so far."
    },
    {
      "content": "Consider edge cases, such as when the array length is equal to `k`. In this case, the entire array is the only subarray to consider."
    },
    {
      "content": "What should you do if there are negative numbers in the array? Remember that the average can still be calculated the same way, but it may affect the maximum average you find."
    },
    {
      "content": "Make sure to handle cases where `k` is larger than the length of the array. You may want to return an error or handle it gracefully."
    },
    {
      "content": "Think about how to return the result. The problem asks for the maximum average, so you should return a floating-point number, not an integer."
    },
    {
      "content": "Consider the precision of your answer. When dealing with floating-point numbers, be aware of potential rounding issues. You might want to format the output to a certain number of decimal places."
    },
    {
      "content": "To ensure you are correctly implementing the sliding window technique, you can write a helper function to calculate the average of a given subarray."
    },
    {
      "content": "As you implement your solution, remember to test it with various inputs, including arrays with all positive numbers, all negative numbers, and mixed values."
    },
    {
      "content": "You may also want to think about the time complexity of your solution. A naive approach might involve checking all possible subarrays, leading to O(n*k) complexity, but the sliding window approach can reduce this to O(n)."
    },
    {
      "content": "If you are still struggling, consider writing out the steps in pseudocode before jumping into implementation. This can help clarify your thought process."
    },
    {
      "content": "Finally, ensure that your implementation correctly handles the case where multiple subarrays yield the same maximum average. You should still return the maximum average value."
    }
  ],
  "questionNotes": [
    "You need to find the maximum average of any contiguous subarray of length `k`.",
    "The average is calculated as the sum of the elements divided by `k`.",
    "Consider edge cases where the array length is equal to or less than `k`.",
    "Return the result as a floating-point number, ensuring precision."
  ]
}