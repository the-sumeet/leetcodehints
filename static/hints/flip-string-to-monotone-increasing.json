{
  "hints": [
    {
      "content": "Start by understanding what a monotone increasing binary string looks like. It consists of all '0's followed by all '1's. For example, '000111' is valid, while '00110' is not."
    },
    {
      "content": "Consider the implications of flipping a character in the string. Flipping a '0' to '1' or a '1' to '0' changes the structure of the string. Think about how many flips are needed to achieve the desired structure."
    },
    {
      "content": "Count the number of '0's and '1's in the string. This will help you understand how many characters need to be flipped to achieve a monotone increasing string."
    },
    {
      "content": "Instead of flipping characters directly, think about the transitions between '0's and '1's in the string. Each transition point is a potential candidate for a flip."
    },
    {
      "content": "You can iterate through the string and keep track of the number of '0's and '1's encountered so far. This will help you determine how many flips are needed at each point."
    },
    {
      "content": "Create two arrays or variables to keep track of the cumulative counts of '0's and '1's as you iterate through the string. This will allow you to calculate the flips needed efficiently."
    },
    {
      "content": "As you iterate, for each position where you could 'cut' the string into '0's and '1's, calculate the flips needed if you were to make that cut. This involves summing the flips for '1's before the cut and '0's after the cut."
    },
    {
      "content": "Remember to consider edge cases, such as strings that are already monotone increasing or strings that consist entirely of '0's or '1's. These cases should require zero flips."
    },
    {
      "content": "Keep track of the minimum number of flips needed as you evaluate each potential cut point. This will help you find the optimal solution."
    },
    {
      "content": "Finally, think about how you will return your result. You need to return the minimum number of flips needed to make the string monotone increasing."
    }
  ],
  "questionNotes": [
    "A binary string is monotone increasing if it consists of some number of '0's followed by some number of '1's.",
    "You can flip s[i] changing it from '0' to '1' or from '1' to '0'.",
    "Return the minimum number of flips to make s monotone increasing.",
    "Constraints: 1 <= s.length <= 10^5, s[i] is either '0' or '1'."
  ]
}