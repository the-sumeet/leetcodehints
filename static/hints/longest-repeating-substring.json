{
  "hints": [
    {
      "content": "Start by understanding what a 'repeating substring' means. A substring is a contiguous sequence of characters within a string. For example, in 'abbaba', 'ab' and 'ba' are repeating substrings."
    },
    {
      "content": "Consider how you can identify substrings within the given string. You can use nested loops to generate all possible substrings. For a string of length n, there are O(n^2) possible substrings."
    },
    {
      "content": "Think about how to check if a substring repeats. You might want to store the substrings you've seen in a data structure like a set or a dictionary to track their occurrences."
    },
    {
      "content": "Remember to keep track of the longest repeating substring found so far. You can compare lengths whenever you find a repeating substring and update your result accordingly."
    },
    {
      "content": "Edge cases are important! What happens if the input string is empty or has only one character? Make sure your solution can handle these scenarios gracefully."
    },
    {
      "content": "Consider the constraints of the problem. If the input string can be very long, an O(n^3) solution (checking all substrings and their counts) may not be efficient enough. Aim for a more optimal approach."
    },
    {
      "content": "A common approach to optimize this problem is to use binary search combined with a rolling hash. You can binary search for the length of the substring and use hashing to check for duplicates."
    },
    {
      "content": "When implementing the rolling hash, ensure you handle collisions properly. This means you will need to verify that the substrings are indeed the same, even if their hashes match."
    },
    {
      "content": "As you implement your solution, be mindful of the return format. You should return the longest repeating substring itself, not just its length."
    },
    {
      "content": "Finally, make sure to consider how you will handle ties. If there are multiple longest repeating substrings of the same length, decide on a consistent method to return one of them."
    }
  ],
  "questionNotes": [
    "The input is a string, which may be empty or contain only one character.",
    "You need to return the longest repeating substring, not just its length.",
    "If multiple longest substrings exist, a consistent tie-breaking method should be applied."
  ]
}