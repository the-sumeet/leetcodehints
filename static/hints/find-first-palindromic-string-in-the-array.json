{
  "hints": [
    {
      "content": "Start by understanding what a palindromic string is. A string is palindromic if it reads the same backward as forward. For instance, 'ada' and 'racecar' are palindromes."
    },
    {
      "content": "Consider how you will check if a string is palindromic. You can compare the string to its reverse. In many programming languages, this can be done easily with slicing or built-in functions."
    },
    {
      "content": "Think about how you will iterate through the array of strings. You need to check each string one by one until you find the first palindromic string."
    },
    {
      "content": "Remember to return an empty string if no palindromic string is found. This means you should have a condition to check after iterating through the entire array."
    },
    {
      "content": "Make sure to handle edge cases, such as when the array contains only one string. What if that single string is not a palindrome?"
    },
    {
      "content": "Consider the constraints given in the problem. You have up to 100 strings, and each string can be up to 100 characters long. This means your solution should be efficient but does not need to be overly complex."
    },
    {
      "content": "When checking if a string is palindromic, think about using a helper function. This can make your main logic cleaner and easier to read."
    },
    {
      "content": "As you implement your solution, keep track of the first palindromic string you find. You can use a variable to store this string and update it when you find a new palindrome."
    },
    {
      "content": "Make sure to test your solution with different types of input, including arrays with no palindromic strings and arrays where the first string is a palindrome."
    },
    {
      "content": "Your final implementation should return the first palindromic string found, or an empty string if none exists. Ensure that your return statement is correctly placed after the loop."
    }
  ],
  "questionNotes": [
    "A string is palindromic if it reads the same forward and backward.",
    "Return the first palindromic string found, or an empty string if none exist.",
    "Constraints: 1 <= words.length <= 100; 1 <= words[i].length <= 100; words[i] consists only of lowercase English letters."
  ]
}