{
  "hints": [
    {
      "content": "Start by understanding the format of the input dates. They are provided as strings in the format YYYY-MM-DD. You will need to parse these strings to extract the year, month, and day components."
    },
    {
      "content": "Consider how you can represent a date in a way that allows you to perform arithmetic on it. One approach is to convert the date strings into a date object, which will help you easily calculate the difference between two dates."
    },
    {
      "content": "Think about how you can handle the difference between two dates. You can subtract one date from another to get a time duration. In many programming languages, this will give you the difference in days directly."
    },
    {
      "content": "When calculating the number of days, be mindful of the order of the dates. The difference should always be a non-negative number, so consider using the absolute value of the difference."
    },
    {
      "content": "You may want to handle edge cases, such as when the two dates are the same. In this case, the number of days between them should be zero."
    },
    {
      "content": "Consider using built-in date libraries or modules available in your programming language. For example, in Python, you can use the `datetime` module, which provides a straightforward way to work with dates."
    },
    {
      "content": "Make sure to validate the input dates. Since the constraints specify that the dates are valid and between the years 1971 and 2100, you can assume they are formatted correctly, but it's good practice to ensure this."
    },
    {
      "content": "Think about how leap years affect the number of days in February. Ensure your date handling correctly accounts for leap years when calculating the difference between dates."
    },
    {
      "content": "To calculate the number of days between two dates, you can convert both dates into a date object and then subtract them. This will give you a timedelta object, from which you can easily extract the number of days."
    },
    {
      "content": "Finally, implement the logic to return the absolute number of days between the two dates. Remember to account for any potential edge cases you've identified, such as the same date or leap years."
    }
  ],
  "questionNotes": [
    "Input dates are in the format YYYY-MM-DD.",
    "Dates are valid and between the years 1971 and 2100.",
    "Output should be the absolute number of days between the two dates."
  ]
}