{
  "hints": [
    {
      "content": "Start by understanding what it means to reverse a string. Reversing a string means that the first character becomes the last, the second character becomes the second to last, and so on."
    },
    {
      "content": "Since you need to modify the input array in-place, think about how you can swap characters without using additional arrays. Consider using two pointers: one starting at the beginning and the other at the end of the array."
    },
    {
      "content": "When using two pointers, remember to move the pointers towards each other after swapping the characters. This will help you gradually reverse the string from both ends."
    },
    {
      "content": "Make sure to handle the case where the length of the string is odd. In this case, the middle character does not need to be swapped."
    },
    {
      "content": "Consider edge cases, such as when the input array has only one character or is empty. What should your function return in these cases?"
    },
    {
      "content": "Think about how you can implement the swapping of characters. You might need a temporary variable to hold one of the characters during the swap."
    },
    {
      "content": "As you implement your solution, remember to check the constraints provided. The maximum length of the input array is 100,000 characters, so your solution should be efficient."
    },
    {
      "content": "Keep in mind that the characters in the input array are printable ASCII characters. This means you don't need to worry about special or non-ASCII characters."
    },
    {
      "content": "You should aim for a time complexity of O(n) where n is the length of the string, as you will need to visit each character at least once."
    },
    {
      "content": "To finalize your approach, write pseudocode that outlines the steps of initializing your pointers, performing swaps, and updating the pointers until they meet. For example:\n\n```\nleft = 0\nright = length - 1\nwhile left < right:\n    swap(s[left], s[right])\n    left++\n    right--\n```\nMake sure to adapt this into your actual function."
    }
  ],
  "questionNotes": [
    "You must modify the input array in-place with O(1) extra memory.",
    "The input is given as an array of characters.",
    "Constraints: 1 <= s.length <= 10^5.",
    "s[i] is a printable ASCII character."
  ]
}