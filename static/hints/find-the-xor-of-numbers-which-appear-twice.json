{
  "hints": [
    {
      "content": "Start by understanding the properties of the XOR operation. Recall that `a XOR a = 0` and `a XOR 0 = a`. This means that if you XOR a number with itself, it cancels out."
    },
    {
      "content": "Consider how you can keep track of which numbers appear in the array. You might want to use a data structure that allows you to count occurrences of each number."
    },
    {
      "content": "Think about using a dictionary or a list to store counts for each number. As you iterate through the array, you can increase the count for each number you encounter."
    },
    {
      "content": "Once you have the counts of each number, filter out the numbers that appear exactly twice. This will give you the set of numbers you need to XOR."
    },
    {
      "content": "Remember to initialize a variable to store the result of the XOR operation. You can start with `result = 0` since XORing with 0 does not change the value."
    },
    {
      "content": "As you iterate through the filtered list of numbers that appear twice, apply the XOR operation to your result variable. Update the result with each number you process."
    },
    {
      "content": "Consider edge cases where no numbers appear twice. Ensure that your function returns 0 in such cases. You might want to check if your filtered list is empty before performing the XOR."
    },
    {
      "content": "Make sure to handle the input constraints properly. The numbers in `nums` are between 1 and 50, and the length of the array is at least 1 and at most 50."
    },
    {
      "content": "After filtering the numbers that appear twice, if your result variable is still 0, it indicates that no numbers appeared twice. Ensure your final return statement reflects this."
    },
    {
      "content": "Finally, put together the logic into a single function. Iterate through the array to count occurrences, filter for duplicates, and compute the XOR of those duplicates before returning the result."
    }
  ],
  "questionNotes": [
    "Each number in nums appears either once or twice.",
    "Return the XOR of all numbers that appear twice, or 0 if none do.",
    "Constraints: 1 <= nums.length <= 50, 1 <= nums[i] <= 50."
  ]
}