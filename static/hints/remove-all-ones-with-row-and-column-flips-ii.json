{
  "hints": [
    {
      "content": "Start by understanding the operations allowed: you can flip entire rows or entire columns. Think about how flipping a row changes the values in that row and how it might affect the overall matrix."
    },
    {
      "content": "Consider the effect of flipping a row. For example, flipping the first row of `[[1,1,1],[1,1,1]]` changes it to `[[0,0,0],[1,1,1]]`. How does this operation help in achieving the goal of removing all ones?"
    },
    {
      "content": "Notice that flipping a row twice will return it to its original state. This means that each row can be flipped at most once to achieve the desired configuration. Think about how this could simplify your approach."
    },
    {
      "content": "When you flip a row, it may be beneficial to consider the columns next. For example, if you flip the first row, how would you decide which columns to flip next to maximize the number of zeros?"
    },
    {
      "content": "Identify patterns in the matrix. For instance, if a row has more ones than zeros, it might be more advantageous to flip that row. Can you find a way to count the number of ones and zeros in each row?"
    },
    {
      "content": "Think about the final state of the matrix. You want all elements to be zero. If you can determine a strategy to flip rows and columns systematically, how would you ensure that every row and column is considered?"
    },
    {
      "content": "Consider edge cases, such as when the matrix is already all zeros or when it has only one row or one column. How would your solution handle these scenarios?"
    },
    {
      "content": "You might want to track which rows have been flipped and which columns have been flipped. A simple boolean array for rows and columns could help you manage this state effectively."
    },
    {
      "content": "As you build your solution, remember that the goal is to minimize the number of ones. After deciding which rows to flip, think about how to efficiently determine which columns to flip next."
    },
    {
      "content": "Finally, consider how you would implement your logic. You might want to iterate through the matrix and apply your row and column flip strategy, checking the result after each operation. What would your final function return?"
    }
  ],
  "questionNotes": [
    "You can flip entire rows or entire columns.",
    "Flipping a row or column twice returns it to its original state.",
    "The goal is to make all elements in the matrix equal to zero.",
    "Consider edge cases like empty matrices or matrices already filled with zeros.",
    "The output format is not specified, but typically you may need to return the modified matrix or a count of operations."
  ]
}