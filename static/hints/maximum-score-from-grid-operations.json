{
  "hints": [
    {
      "content": "Start by understanding the operation: when you select a cell (i, j), all cells in column j from row 0 to row i become black. This affects the score of the cells that remain white and are adjacent to the black cells."
    },
    {
      "content": "Consider how the scoring works: a white cell contributes to the score if it has at least one horizontally adjacent black cell. Think about how you can maximize the number of white cells that meet this condition."
    },
    {
      "content": "Focus on the grid's structure. Each column can be independently colored, so consider the impact of operations on different columns separately. This may lead to a more straightforward approach."
    },
    {
      "content": "Examine edge cases, such as when the grid is filled with zeros. What would the score be in this case? This will help you understand the baseline behavior of your solution."
    },
    {
      "content": "Think about how to keep track of which cells are black after performing operations. You might want to use a separate data structure to maintain the state of the grid."
    },
    {
      "content": "Before diving into coding, sketch out a few examples by hand. This will help you visualize how the operations affect the grid and the resulting score."
    },
    {
      "content": "Consider using a greedy approach where you prioritize operations based on the potential score increase. Which columns or rows would yield the highest scores if colored?"
    },
    {
      "content": "Remember that you can perform multiple operations. Think about the order of operations and how it affects the final score. Can you find an optimal sequence?"
    },
    {
      "content": "Keep in mind the constraints: the grid size can be as large as 100x100, and cell values can go up to 10^9. Ensure your solution is efficient and can handle the upper limits."
    },
    {
      "content": "You may want to calculate the potential score for each column if you were to color it fully down to the last row. This could give you insights into which columns to prioritize."
    },
    {
      "content": "Consider implementing a function that calculates the score based on the current state of the grid. This will help you evaluate the effectiveness of your operations."
    },
    {
      "content": "When evaluating potential operations, think about how many white cells can be scored by coloring a specific column. This will guide your decision-making process."
    },
    {
      "content": "You might want to create a temporary grid to simulate the operations without modifying the original grid. This can help you test different strategies without losing your initial data."
    },
    {
      "content": "As you refine your approach, think about how to efficiently calculate the score after each operation. This could involve iterating through the grid or using a more optimized method."
    },
    {
      "content": "Finally, consider edge cases such as a grid filled with the maximum values. How do these values affect your scoring strategy? Are there any columns that stand out?"
    }
  ],
  "questionNotes": [
    "The grid is n x n, where 1 <= n <= 100.",
    "Each cell value is between 0 and 10^9.",
    "The score is based on white cells that have horizontally adjacent black cells.",
    "Multiple operations can be performed, and the order may affect the final score."
  ]
}