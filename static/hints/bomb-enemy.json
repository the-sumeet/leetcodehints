{
  "hints": [
    {
      "content": "Start by understanding the grid structure. Each cell can contain '0', 'E', or 'W'. 'E' represents an enemy, 'W' represents a wall, and '0' is an empty space. Think about how these elements interact with each other."
    },
    {
      "content": "Consider how to traverse the grid. You will need to check in all four directions (up, down, left, right) from each cell. Make sure to handle boundaries so you don't go out of the grid."
    },
    {
      "content": "When you encounter an 'E', you should count it. However, if you encounter a 'W', you must stop counting in that direction. Think about how you can keep track of the number of enemies you can reach."
    },
    {
      "content": "You might want to use a nested loop to iterate through each cell in the grid. For each cell that is '0', initiate a count of enemies in all four directions. This will help you gather the total number of enemies that can be hit."
    },
    {
      "content": "As you count enemies in each direction, remember to reset your count if you hit a wall. You can use a temporary variable to hold the count for the current direction before moving to the next."
    },
    {
      "content": "Think about how to store the maximum number of enemies you can hit. You can use a variable to keep track of this maximum as you explore each cell in the grid."
    },
    {
      "content": "Don't forget to consider edge cases, such as when the grid is empty or when there are no enemies present. How will your code handle these scenarios? Make sure to test these cases."
    },
    {
      "content": "If you encounter multiple cells with the same maximum count of enemies, you should return the maximum count only once. Ensure that your solution correctly identifies and returns this maximum."
    },
    {
      "content": "You might want to create a helper function to count enemies in a specific direction. This will help keep your code organized and make it easier to handle the counting logic."
    },
    {
      "content": "Finally, think about how to implement the logic to call your counting function from the main loop. Make sure to pass the correct parameters for the current cell and direction to get accurate counts."
    }
  ],
  "questionNotes": [
    "The grid is represented as a 2D array of strings.",
    "Each cell can contain '0', 'E', or 'W'.",
    "You need to count enemies in all four directions until you hit a wall.",
    "Return the maximum number of enemies that can be hit from any '0' cell.",
    "Consider edge cases like empty grids or grids without enemies."
  ]
}