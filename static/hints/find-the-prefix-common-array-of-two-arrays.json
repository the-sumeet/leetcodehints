{
  "hints": [
    {
      "content": "Start by understanding what a prefix common array is. For each index `i`, you need to count how many numbers have appeared in both arrays `A` and `B` up to that index."
    },
    {
      "content": "Remember that both `A` and `B` are permutations of integers from 1 to `n`. This means every number from 1 to `n` will appear exactly once in each array."
    },
    {
      "content": "You can use a set or a dictionary to keep track of the numbers you've seen so far in both arrays. This will help you efficiently check for common elements."
    },
    {
      "content": "Initialize an empty set for both arrays. As you iterate through the indices, add the current number from `A` and `B` to their respective sets."
    },
    {
      "content": "For each index `i`, after adding the current elements to the sets, check how many elements are present in both sets. This count will be the value for `C[i]`."
    },
    {
      "content": "Consider the edge case where the arrays have only one element. What should the output be in this case? This will help you verify your logic against simpler inputs."
    },
    {
      "content": "Make sure to handle the output format correctly. The result should be an array of integers, where each integer corresponds to the count of common elements at each index."
    },
    {
      "content": "As a performance tip, since the maximum length of `A` and `B` is 50, your solution can afford to be O(n) or even O(n^2) without performance issues."
    },
    {
      "content": "Think about how to efficiently check for common elements. Using set intersection could be one approach, but you might want to avoid recalculating it from scratch at each index."
    },
    {
      "content": "To finalize your solution, ensure that you are correctly initializing your result array `C` and populating it as you iterate through the indices of `A` and `B`."
    }
  ],
  "questionNotes": [
    "Both A and B are permutations of integers from 1 to n.",
    "The output should be a 0-indexed array C where C[i] counts common elements up to index i.",
    "Constraints: 1 <= A.length == B.length == n <= 50; 1 <= A[i], B[i] <= n."
  ]
}