{
  "hints": [
    {
      "content": "Start by understanding what prime indices are. Remember that prime numbers are greater than 1 and have no divisors other than 1 and themselves. For example, the first few prime numbers are 2, 3, 5, 7, etc."
    },
    {
      "content": "You need to identify the prime indices in the array. Consider writing a helper function that checks if a number is prime. This function can be used to determine which indices to include in array A."
    },
    {
      "content": "Remember that array indices in programming are zero-based. This means that the first element is at index 0, the second at index 1, and so on. Be careful when checking for prime indices."
    },
    {
      "content": "As you iterate through the array, maintain two separate sums: one for array A (elements at prime indices) and one for array B (elements at non-prime indices). You can initialize both sums to zero."
    },
    {
      "content": "Consider edge cases where the array might be very small. For example, if the input array has only one element, how would you handle it? Remember that the only prime index that can exist in such a case is 0, which is not prime."
    },
    {
      "content": "Once you have the sums for arrays A and B, calculate the absolute difference. In Python, you can use the built-in `abs()` function to find the absolute value of a number."
    },
    {
      "content": "Make sure to handle negative numbers in the input array correctly. The sum of negative numbers can affect the final absolute difference, so test with various combinations of positive and negative numbers."
    },
    {
      "content": "Think about how you will check for prime indices efficiently. You might want to precompute prime indices up to the maximum possible length of the input array (10^5) using the Sieve of Eratosthenes algorithm."
    },
    {
      "content": "After summing the elements in both arrays, remember to return the result in the specified format: the absolute difference as a single integer value."
    },
    {
      "content": "To summarize, your function should: 1) Identify prime indices, 2) Split elements into two sums based on those indices, and 3) Return the absolute difference. Start implementing these steps one by one."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= nums.length <= 10^5",
    "Element range: -10^9 <= nums[i] <= 10^9",
    "Indices are zero-based; remember that 0 and 1 are not prime.",
    "An empty array has a sum of 0."
  ]
}