{
  "hints": [
    {
      "content": "Start by understanding the structure of the input matrix. It is a binary matrix, meaning each element is either 0 or 1. Your task is to count the number of 1's in each row."
    },
    {
      "content": "Think about how you can iterate through each row of the matrix. You can use a simple loop to access each row and then count the number of 1's in that row."
    },
    {
      "content": "Consider using a variable to keep track of the maximum count of 1's found so far. You will also need to store the index of the row that has this maximum count."
    },
    {
      "content": "When counting the 1's in a row, you can use a built-in function like `sum()` in Python, which can sum up the values directly since the matrix contains only 0's and 1's."
    },
    {
      "content": "Remember to handle the case where multiple rows have the same maximum count of 1's. You should always select the row with the smallest index in such cases."
    },
    {
      "content": "As you iterate through the rows, update your maximum count and the corresponding row index whenever you find a new maximum. If you find the same maximum, do not change the index."
    },
    {
      "content": "Make sure to initialize your maximum count and index before starting the loop. A good starting point for the maximum count could be -1, and the index could be -1 as well."
    },
    {
      "content": "After processing all rows, you need to return the result in the specified format: an array containing the index of the row and the count of 1's."
    },
    {
      "content": "Consider edge cases, such as when all elements are 0. In such cases, you should still return a valid index and count of 0."
    },
    {
      "content": "Finally, think about how you will implement the final return statement. It should return an array, but ensure you have the correct values for the index and count of 1's before doing so."
    }
  ],
  "questionNotes": [
    "The input is a binary matrix (only 0's and 1's).",
    "You need to return the index of the row with the maximum count of 1's and the count itself.",
    "In case of ties, return the smallest index.",
    "The return format should be an array: [index, count].",
    "Constraints: 1 <= m, n <= 100, where m is the number of rows and n is the number of columns."
  ]
}