{
  "hints": [
    {
      "content": "Start by understanding the properties of a Binary Search Tree (BST). In a BST, for any given node, all values in the left subtree are less than the node's value, and all values in the right subtree are greater."
    },
    {
      "content": "Consider how you would traverse the tree to find the correct position for the new value. You will need to compare the value to be inserted with the current node's value to decide whether to go left or right."
    },
    {
      "content": "Think about the base case for your traversal. What should happen when you reach a null child of a node? This is where you will insert the new value."
    },
    {
      "content": "Remember that the input guarantees that the value to be inserted does not already exist in the BST. This simplifies your logic since you won't need to handle duplicates."
    },
    {
      "content": "As you traverse the tree, keep track of the parent node where the new value will be inserted. You will need to attach the new node to this parent once you find the correct position."
    },
    {
      "content": "Consider the structure of the new node you will create for the value to be inserted. It should have a value, and both left and right pointers initialized to null."
    },
    {
      "content": "When inserting the new node, ensure that you correctly set the left or right pointer of the parent node based on whether the new value is less than or greater than the parent's value."
    },
    {
      "content": "Think about edge cases, such as inserting into an empty tree. How would you handle this scenario? The new node should become the root of the tree."
    },
    {
      "content": "Make sure to return the root of the tree after the insertion. If you insert into an empty tree, the new node becomes the root; otherwise, the original root remains unchanged."
    },
    {
      "content": "To summarize, you will need to traverse the tree recursively or iteratively, find the correct position for the new value, create a new node, and link it to the appropriate parent node. Keep the BST properties intact."
    }
  ],
  "questionNotes": [
    "The number of nodes in the tree will be in the range [0, 10^4].",
    "Node values are unique and within the range [-10^8, 10^8].",
    "The value to be inserted will not already exist in the BST."
  ]
}