{
  "hints": [
    {
      "content": "Start by understanding the structure of the matrix. For an input n, you will create an n x n matrix initialized with zeros or any placeholder value. This will help you visualize where to place the numbers as you fill the matrix."
    },
    {
      "content": "Think about the spiral order. You will need to fill the matrix in four directions: right, down, left, and up. Consider how you can keep track of your current position and direction as you fill in the numbers."
    },
    {
      "content": "You can use a loop to fill the numbers from 1 to n^2. Make sure to increment the number after placing it in the matrix. Keep track of the boundaries of the matrix to know when to change direction."
    },
    {
      "content": "Create variables to represent the current position (row and column) and the current direction you are moving in. You can use a list of tuples to represent the direction changes: right (0,1), down (1,0), left (0,-1), and up (-1,0)."
    },
    {
      "content": "When you reach the edge of the matrix or a cell that is already filled, you need to change direction. This can be done by updating your direction index to the next direction in your list of tuples."
    },
    {
      "content": "Make sure to handle the case when n = 1 separately, as the matrix will simply be [[1]]. This is a base case that can help you test your implementation."
    },
    {
      "content": "Remember to check the boundaries of the matrix when changing directions. You can use conditions to verify if the next position is valid (within bounds and not already filled)."
    },
    {
      "content": "Consider initializing your matrix with a specific size and filling it with zeros. This makes it easy to check if a cell has already been filled when determining if you need to change direction."
    },
    {
      "content": "As you implement the filling logic, you can use a while loop that continues until you have filled all n^2 elements. Keep a counter to track how many numbers you have placed in the matrix."
    },
    {
      "content": "Finally, ensure that your output format matches the required structure. Your function should return the filled matrix as a list of lists, where each inner list represents a row in the spiral matrix."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= n <= 20",
    "The matrix should be filled with integers from 1 to n^2 in spiral order.",
    "Output format: Return a list of lists representing the n x n matrix."
  ]
}