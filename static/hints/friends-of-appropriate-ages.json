{
  "hints": [
    {
      "content": "Start by understanding the conditions under which a person will not send a friend request. There are three key conditions to check for each pair of persons (x, y)."
    },
    {
      "content": "Remember that a person will not send a friend request to themselves. Ensure your loops or checks account for this by avoiding self-comparisons."
    },
    {
      "content": "Consider how to iterate through the `ages` array. You will likely need a nested loop to compare each person with every other person."
    },
    {
      "content": "When checking the conditions, you can use logical operators to combine the checks. For example, you can use `if` statements to evaluate the three conditions."
    },
    {
      "content": "Pay attention to the age boundaries specified in the conditions. Specifically, check the conditions involving the age being less than or greater than certain values, like 0.5 * age[x] + 7."
    },
    {
      "content": "Think about how you can efficiently count the number of friend requests. Instead of just incrementing a counter, you may want to store results in a variable that accumulates the total."
    },
    {
      "content": "Consider edge cases, such as when all ages are the same or when there are ages at the extremes of the allowed range (like 1 and 120). How do these affect the number of requests?"
    },
    {
      "content": "You may want to create a helper function to determine if one person can send a request to another based on the given conditions. This will make your main logic cleaner."
    },
    {
      "content": "As you implement the conditions, ensure that you check them in the correct order. The order of checks can affect performance and correctness, especially with overlapping conditions."
    },
    {
      "content": "Finally, after implementing your logic, test it with the provided examples and additional edge cases to ensure it behaves as expected. Pay close attention to the output format."
    }
  ],
  "questionNotes": [
    "Constraints: n == ages.length, 1 <= n <= 2 * 10^4, 1 <= ages[i] <= 120.",
    "A person will not send a friend request to themselves.",
    "The conditions for sending a friend request must be checked in the order specified.",
    "Friend requests are directional; if x sends a request to y, it doesnâ€™t mean y sends one back."
  ]
}