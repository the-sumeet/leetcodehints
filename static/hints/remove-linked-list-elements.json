{
  "hints": [
    {
      "content": "Start by understanding the structure of a linked list. Each node has a value and a pointer to the next node. You need to traverse the list to identify nodes that match the given value."
    },
    {
      "content": "Consider how you will handle the head of the list. If the head node itself has the value that needs to be removed, you will need to update the head pointer."
    },
    {
      "content": "Think about how to traverse the linked list. You can use a loop to go through each node until you reach the end (when the current node is null)."
    },
    {
      "content": "As you traverse the list, maintain a pointer to the previous node. This will help you remove the current node by adjusting the previous node's next pointer."
    },
    {
      "content": "When you find a node that needs to be removed, you should skip over it by changing the next pointer of the previous node. Make sure to handle cases where multiple consecutive nodes have the value to be removed."
    },
    {
      "content": "Don't forget to handle the case where the list is empty. If the head is null, you should simply return null."
    },
    {
      "content": "After removing nodes, ensure that you return the new head of the list. This may be different from the original head if the original head was removed."
    },
    {
      "content": "Consider edge cases where all nodes might need to be removed, or where no nodes need to be removed. Your implementation should handle these gracefully."
    },
    {
      "content": "Remember to test your solution with various inputs, including edge cases like an empty list or a list where all elements are the same as the value to remove."
    },
    {
      "content": "You are close to a solution! To finalize, think about how you will structure your loop and the conditions for moving the previous pointer and the current pointer. For example:\n\n```python\nwhile current is not None:\n    if current.val == val:\n        # adjust pointers\n    else:\n        # move previous pointer\n```"
    }
  ],
  "questionNotes": [
    "The linked list may contain 0 to 10,000 nodes.",
    "Node values range from 1 to 50, and the value to remove can be from 0 to 50.",
    "Ensure you return the new head of the list after removals.",
    "Consider cases where the head node or multiple consecutive nodes need to be removed."
  ]
}