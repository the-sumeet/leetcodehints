{
  "hints": [
    {
      "content": "Start by considering what it means for three integers to be consecutive. If we denote the first integer as 'x', then the three integers can be represented as x, x+1, and x+2."
    },
    {
      "content": "Next, think about how to express the sum of these three integers. The sum can be written as: x + (x + 1) + (x + 2) = 3x + 3."
    },
    {
      "content": "From the previous hint, you can simplify the equation to find x in terms of num. The equation becomes: 3x + 3 = num. Can you isolate x?"
    },
    {
      "content": "Rearranging the equation gives you: 3x = num - 3. This means x = (num - 3) / 3. What can you infer about the value of num for x to be an integer?"
    },
    {
      "content": "Since x needs to be an integer, consider the condition for (num - 3) to be divisible by 3. How can you check this condition?"
    },
    {
      "content": "Think about the edge cases. What happens when num is less than 3? Can you express that in terms of the conditions for returning an empty array?"
    },
    {
      "content": "If the condition for divisibility is satisfied, you can compute x. Remember to construct the final output as an array of the three consecutive integers. What would that look like?"
    },
    {
      "content": "When constructing the output array, ensure that you are returning the integers in sorted order. Given that x is the smallest integer, how would you create the array?"
    },
    {
      "content": "Before finalizing your solution, consider the constraints provided in the problem. How does the range of num (0 <= num <= 10^15) affect your approach?"
    },
    {
      "content": "Finally, ensure that your function handles all edge cases correctly. What will you return if num cannot be expressed as the sum of three consecutive integers?"
    }
  ],
  "questionNotes": [
    "The three integers must be consecutive.",
    "Return format: a sorted array of the three integers.",
    "If num cannot be expressed as the sum, return an empty array.",
    "Constraints: 0 <= num <= 10^15."
  ]
}