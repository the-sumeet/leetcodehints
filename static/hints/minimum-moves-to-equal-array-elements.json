{
  "hints": [
    {
      "content": "Start by understanding what a 'move' means in this context. You can increment n - 1 elements of the array by 1 in one move. This means that in each move, one element remains unchanged while the others increase."
    },
    {
      "content": "Consider what the target value for all elements should be. Since you can only increment n - 1 elements, think about how you can minimize the number of moves by focusing on the smallest element in the array."
    },
    {
      "content": "Think about how many moves it would take to make all elements equal to the maximum element in the array. However, remember that you can only increment n - 1 elements at a time."
    },
    {
      "content": "Instead of trying to bring all elements up to the maximum, consider how many moves it takes to bring all elements down to the minimum element in the array. This is equivalent because of the nature of the allowed moves."
    },
    {
      "content": "Calculate the total number of increments needed to make all elements equal to the minimum element. For each element greater than the minimum, you will need to perform a certain number of moves."
    },
    {
      "content": "Formulate your approach: You can calculate how many moves are needed by summing the differences between each element and the minimum element. This will give you the total number of increments required."
    },
    {
      "content": "Remember to handle edge cases, such as when all elements are already equal. In such cases, the number of moves required should be zero."
    },
    {
      "content": "Consider the constraints of the problem. The array can contain up to 100,000 elements, and each element can be as large as 10^9. Make sure your solution is efficient enough to handle these limits."
    },
    {
      "content": "Think about the time complexity of your approach. You may want to aim for a linear time complexity O(n) to ensure that your solution runs efficiently for large inputs."
    },
    {
      "content": "Finally, implement your logic to compute the total number of moves. You will need to iterate through the array, calculate the necessary increments, and return the total count."
    }
  ],
  "questionNotes": [
    "You can increment n - 1 elements of the array by 1 in one move.",
    "The goal is to make all elements equal with the minimum number of moves.",
    "Focus on the smallest element in the array to minimize moves.",
    "The answer must fit within a 32-bit integer.",
    "Consider edge cases where all elements are already equal."
  ]
}