{
  "hints": [
    {
      "content": "Start by understanding the input format. You will receive a list of pairs, where each pair consists of a student ID and a score. Think about how you can group these scores by student ID."
    },
    {
      "content": "Consider using a data structure that allows you to store multiple scores for each student. A dictionary (or hashmap) could be a good choice, where the key is the student ID and the value is a list of scores."
    },
    {
      "content": "As you process each score, remember that you need to keep track of the highest scores. Think about how you can efficiently update the scores for each student as you iterate through the list."
    },
    {
      "content": "You need to find the top five scores for each student. Once you have all the scores, how will you determine the top five? Consider sorting the scores or using a data structure that maintains order."
    },
    {
      "content": "When you have the top five scores, think about how to compute the average. Remember that the average is the sum of the scores divided by the number of scores, which in this case is always five."
    },
    {
      "content": "Pay attention to the output format. You need to return a list of pairs where each pair consists of a student ID and their average score. Make sure to format the output correctly."
    },
    {
      "content": "Consider edge cases, such as when a student has fewer than five scores. How will you handle these cases? Make sure your solution can handle all possible inputs."
    },
    {
      "content": "Think about how to handle ties in scores. If two students have the same top five scores, how will you ensure that they are processed correctly?"
    },
    {
      "content": "As you implement your solution, keep in mind the efficiency of your approach. If you are sorting scores for each student, consider the time complexity and whether there are more efficient ways to find the top five scores."
    },
    {
      "content": "To finalize your solution, ensure that you iterate through the dictionary of student scores, calculate the average for each student, and prepare the final output list in the required format. Remember to sort the output by student ID."
    }
  ],
  "questionNotes": [
    "Input is a list of pairs [student_id, score].",
    "Each student_id can appear multiple times with different scores.",
    "You need to find the top five scores for each student.",
    "Return the average of the top five scores for each student as a list of pairs [student_id, average_score].",
    "If a student has fewer than five scores, consider how to handle that situation.",
    "Output must be sorted by student_id."
  ]
}