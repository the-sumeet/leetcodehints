{
  "hints": [
    {
      "content": "Start by understanding the structure of the input matrix. Each row contains multiple integers, and you need to select one integer from each row."
    },
    {
      "content": "Consider how the sum of the selected integers can vary based on your choices. The goal is to minimize the absolute difference between this sum and the given target."
    },
    {
      "content": "Think about the possible sums you can create by selecting different integers from each row. What data structure could help you keep track of these sums efficiently?"
    },
    {
      "content": "You might want to explore a recursive approach or dynamic programming to build up possible sums from the rows of the matrix. This way, you can systematically explore combinations."
    },
    {
      "content": "As you generate possible sums, keep track of the minimum absolute difference from the target. You can use a variable to store this minimum difference."
    },
    {
      "content": "Remember that the constraints allow for a maximum of 70 rows and 70 columns. This suggests that a brute force approach may not be feasible due to the large number of combinations."
    },
    {
      "content": "Consider using a set to store the sums of selected integers from the rows. This can help you easily check for the closest sum to the target as you build up your selections."
    },
    {
      "content": "Think about how you can optimize your search for the closest sum to the target. Sorting the possible sums might help you quickly find the closest one."
    },
    {
      "content": "When implementing your solution, ensure that you handle edge cases, such as when there is only one row or when all elements are the same."
    },
    {
      "content": "Your final implementation should return the minimum absolute difference. Make sure to test your solution with various inputs to confirm its correctness."
    }
  ],
  "questionNotes": [
    "Constraints: m == mat.length, n == mat[i].length",
    "1 <= m, n <= 70",
    "1 <= mat[i][j] <= 70",
    "1 <= target <= 800",
    "You must choose one integer from each row.",
    "Return the minimum absolute difference."
  ]
}