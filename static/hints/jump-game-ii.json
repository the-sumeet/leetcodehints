{
  "hints": [
    {
      "content": "Start by understanding the problem. You need to find the minimum number of jumps to reach the last index of the array. Each element in the array tells you how far you can jump from that index."
    },
    {
      "content": "Consider the case where you are at index 0. What are the possible indices you can jump to? This will help you visualize the problem. For example, if nums[0] = 2, you can jump to index 1 or 2."
    },
    {
      "content": "Think about how you can keep track of the farthest index you can reach with each jump. You may want to maintain a variable that records the maximum reach from the current position."
    },
    {
      "content": "You will need to count how many jumps you make. Start with a jump counter initialized to 0. Each time you decide to jump, increment this counter."
    },
    {
      "content": "When you jump to a new index, consider how far you can go from there. You should update your maximum reach based on the current index and the jump length."
    },
    {
      "content": "Use a loop to iterate through the array. For each index, check if you can reach the last index from there. If so, you can break out of the loop."
    },
    {
      "content": "Think about edge cases, such as when the array length is 1. In this case, you are already at the last index, so no jumps are needed."
    },
    {
      "content": "You may want to use a greedy approach. At each step, calculate the farthest you can reach within the current jump range and decide when to jump."
    },
    {
      "content": "Consider how to handle the transition from one jump to the next. You might want to keep track of the end of the current jump range and when you need to make a new jump."
    },
    {
      "content": "Finally, remember that you need to return the total number of jumps. Ensure that your logic correctly counts the jumps made to reach the last index."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= nums.length <= 10^4 and 0 <= nums[i] <= 1000.",
    "You are guaranteed that you can reach nums[n - 1].",
    "Return the minimum number of jumps as an integer.",
    "The array is 0-indexed, meaning the first element is at index 0."
  ]
}