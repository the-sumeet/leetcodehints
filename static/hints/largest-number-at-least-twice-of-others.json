{
  "hints": [
    {
      "content": "Start by identifying the largest number in the array. You can do this by iterating through the array and keeping track of the maximum value and its index."
    },
    {
      "content": "Remember to check that the largest number is unique. Since the problem states that it is unique, you won't need to handle ties, but it's good to keep this in mind."
    },
    {
      "content": "Once you have the largest number, you'll want to compare it against all the other numbers in the array. Consider using a loop to check each number."
    },
    {
      "content": "For each number in the array, check if the largest number is at least twice as much. This can be done using a simple comparison: `largest >= 2 * current_number`."
    },
    {
      "content": "If you find any number that does not satisfy the condition of being less than or equal to half of the largest number, you can immediately return -1."
    },
    {
      "content": "Make sure to handle the case where the array has only two elements. This is a valid input according to the constraints, and you should ensure your logic works for this edge case."
    },
    {
      "content": "After checking all other numbers, if the largest number satisfies the condition for all, return its index. Make sure you keep track of the index when you find the largest number."
    },
    {
      "content": "Consider edge cases where the largest number is 0. Although the problem states the largest is unique, ensure your logic still holds when comparing with other numbers."
    },
    {
      "content": "Think about the efficiency of your solution. Since the constraints are small (up to 50 elements), a simple O(n) solution is sufficient."
    },
    {
      "content": "Finally, structure your return statement correctly. If the largest number meets the criteria, return the index; otherwise, return -1. Make sure to test your code with different inputs."
    }
  ],
  "questionNotes": [
    "Constraints: 2 <= nums.length <= 50",
    "Values: 0 <= nums[i] <= 100",
    "The largest element in nums is unique.",
    "Return the index of the largest element or -1 if it does not meet the criteria."
  ]
}