{
  "hints": [
    {
      "content": "Start by thinking about how you can count the occurrences of each number in the array. You can use a dictionary or a frequency array to keep track of how many times each number appears."
    },
    {
      "content": "Remember that a pair consists of two equal integers. Once you have the counts, consider how you can determine the number of pairs from those counts. For each number, the number of pairs you can form is the integer division of its count by 2."
    },
    {
      "content": "After calculating the pairs, think about how to compute the leftover integers. The leftover for each number can be found using the modulus operation: count % 2 will give you 1 if there's an unpaired integer, and 0 if all are paired."
    },
    {
      "content": "Consider using a loop to iterate through your frequency data structure. For each unique number, calculate both the pairs and the leftover integers. Accumulate these values to get the final answer."
    },
    {
      "content": "Don't forget about edge cases! What happens if the input array has only one element? Make sure your solution correctly handles such cases without errors."
    },
    {
      "content": "Think about the constraints given in the problem. The maximum length of the array is 100, and the values are between 0 and 100. This means that your approach should be efficient but doesn't need to handle extremely large inputs."
    },
    {
      "content": "When returning the result, remember that the output format is a 0-indexed array of size 2. The first element should be the number of pairs, and the second should be the number of leftover integers."
    },
    {
      "content": "As you implement your solution, consider how to initialize your data structure for counting. If you're using an array, you can create an array of size 101 (to include numbers 0 to 100) for counting occurrences."
    },
    {
      "content": "After calculating the total pairs and leftovers, ensure you format the return statement correctly. The final output should be structured as [total_pairs, leftover_count]."
    },
    {
      "content": "Finally, review your code to ensure that it handles all possible inputs correctly, including arrays with all unique elements or arrays where all elements are the same. Test your solution with the provided examples."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= nums.length <= 100",
    "Values: 0 <= nums[i] <= 100",
    "Return format: [number_of_pairs, number_of_leftovers]",
    "0-indexed array"
  ]
}