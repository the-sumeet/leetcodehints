{
  "hints": [
    {
      "content": "Start by understanding the goal of the problem. You need to find the number in the array that is closest to zero. Consider how you would measure 'closeness' to zero."
    },
    {
      "content": "Think about how you can represent the distance of each number from zero. The absolute value function can be helpful here. For example, the distance of a number `x` from zero is `|x|`."
    },
    {
      "content": "You need to iterate through the array to compare each number's distance from zero. What data structure will you use to store the closest number found so far?"
    },
    {
      "content": "As you iterate through the array, keep track of two things: the closest distance to zero and the corresponding number. How will you update these values as you find new numbers?"
    },
    {
      "content": "Consider the case where you find two numbers that are equally close to zero. The problem states that you should return the larger number. How can you implement this logic in your comparisons?"
    },
    {
      "content": "Make sure to handle both positive and negative numbers. Think about how the absolute values of negative numbers compare to positive numbers when determining closeness to zero."
    },
    {
      "content": "Pay attention to edge cases, such as when the array contains only one number. What should your function return in this scenario?"
    },
    {
      "content": "Remember that the constraints specify the range of numbers in the array. Make sure your solution can handle the full range of possible inputs, from -100,000 to 100,000."
    },
    {
      "content": "As you write your code, consider initializing your closest number variable to a value that will be updated by any number in the array. This can help avoid issues with uninitialized variables."
    },
    {
      "content": "Finally, implement the logic to compare distances and update your closest number. Your final comparison should check if the new number is closer to zero or if it is larger in case of a tie."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= n <= 1000, -10^5 <= nums[i] <= 10^5",
    "If multiple numbers are equally close to zero, return the largest one.",
    "The input array can contain both positive and negative numbers."
  ]
}