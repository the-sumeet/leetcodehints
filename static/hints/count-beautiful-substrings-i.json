{
  "hints": [
    {
      "content": "Start by understanding the definitions of vowels and consonants in the context of the problem. Remember that vowels are 'a', 'e', 'i', 'o', and 'u', while consonants are all other letters. You can create a helper function to check if a character is a vowel."
    },
    {
      "content": "Think about how you can generate all possible substrings of the given string. A common approach is to use two nested loops: the outer loop for the starting index and the inner loop for the ending index of the substring."
    },
    {
      "content": "As you generate each substring, keep track of the number of vowels and consonants within that substring. You can initialize two counters and update them as you iterate through the characters of the substring."
    },
    {
      "content": "Once you have the counts of vowels and consonants for a substring, check if they are equal. This is one of the conditions for a substring to be beautiful."
    },
    {
      "content": "In addition to checking if the number of vowels equals the number of consonants, you also need to check if the product of these two counts is divisible by k. Use the modulo operator for this check."
    },
    {
      "content": "Consider edge cases where the string may contain only vowels or only consonants. What would the counts be in these cases? Make sure your solution can handle such scenarios gracefully."
    },
    {
      "content": "Keep track of the total count of beautiful substrings found. You can initialize a counter variable before starting to generate substrings and increment it whenever you find a beautiful substring."
    },
    {
      "content": "Remember that the input string can be up to 1000 characters long. Think about the efficiency of your solution. Generating all substrings has a time complexity of O(n^2), so ensure that your counting logic within that is efficient."
    },
    {
      "content": "When implementing your solution, consider using a nested loop structure to iterate through all possible substrings. For each substring, calculate the number of vowels and consonants, and check the two conditions for beauty."
    },
    {
      "content": "Finally, ensure that your function returns the total count of beautiful substrings. You might want to return the count at the end of your main function after all substrings have been evaluated."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= s.length <= 1000, 1 <= k <= 1000.",
    "The string consists of only English lowercase letters.",
    "A substring is defined as a contiguous sequence of characters in the string.",
    "A string is beautiful if: vowels == consonants and (vowels * consonants) % k == 0."
  ]
}