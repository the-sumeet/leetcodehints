{
  "hints": [
    {
      "content": "Start by understanding the structure of the input data. You have a list of employees with their IDs, salaries, and departments. Focus on how to access and iterate through this data."
    },
    {
      "content": "Consider how you would extract the salary information. You might want to create a list or set that only contains the unique salaries from the employee records."
    },
    {
      "content": "Think about how to handle duplicate salaries. If multiple employees have the same salary, you should only keep one instance of each salary in your collection to find the second highest."
    },
    {
      "content": "Once you have a collection of unique salaries, how would you sort it? Remember that sorting will help you easily identify the second highest salary."
    },
    {
      "content": "After sorting, consider how you would access the second highest salary. What happens if there is only one unique salary? Make sure to handle this edge case."
    },
    {
      "content": "When implementing your solution, remember to check for cases where there might be no second highest salary. For example, if all employees have the same salary, what should your function return?"
    },
    {
      "content": "You might want to think about the return format. Are you returning just the salary, or do you need to return additional information like the employee ID or department?"
    },
    {
      "content": "Consider using data structures like a set to store unique salaries. This can simplify the process of filtering out duplicates before sorting."
    },
    {
      "content": "Once you have your sorted list of unique salaries, accessing the second highest can be done by indexing. Remember that in programming, indexing often starts at zero."
    },
    {
      "content": "Finally, ensure your solution is efficient. Sorting can be costly, so think about whether there are ways to find the second highest salary without sorting the entire list."
    }
  ],
  "questionNotes": [
    "Input is structured as a list of employees with 'emp_id', 'salary', and 'dept'.",
    "You need to find the second highest unique salary.",
    "Handle cases where there is no second highest salary gracefully.",
    "Return format should be clear: only the salary or additional employee info?",
    "Consider edge cases with duplicate salaries and all employees having the same salary."
  ]
}