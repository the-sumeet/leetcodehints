{
  "hints": [
    {
      "content": "Start by breaking down the paragraph into individual words. Remember, words are separated by spaces and can be followed or preceded by punctuation. You can use a method to split the string based on spaces and then clean up each word."
    },
    {
      "content": "Make sure to handle case insensitivity by converting all words to lowercase. This will ensure that 'Bob' and 'bob' are treated as the same word."
    },
    {
      "content": "Next, you'll want to remove any punctuation from the words. Consider using a regular expression or a string method to filter out unwanted characters like '!', '?', ',', etc."
    },
    {
      "content": "After cleaning the words, create a frequency count for each word. You can use a dictionary or a hash map to store the count of each non-banned word."
    },
    {
      "content": "Remember to check against the banned words list when counting frequencies. You can convert the banned list into a set for O(1) average time complexity during lookups."
    },
    {
      "content": "Once you have the frequency counts, identify the word with the highest frequency. You can iterate through the dictionary to find the maximum count while keeping track of the corresponding word."
    },
    {
      "content": "Consider edge cases, such as when the banned list is empty. In this case, you should return the most frequent word from the paragraph itself."
    },
    {
      "content": "Be mindful of the constraints given in the problem. For example, the paragraph length can be up to 1000 characters, and the banned list can have up to 100 words."
    },
    {
      "content": "When returning the result, ensure that the word is in lowercase, as specified in the problem statement. This means you should convert the final answer to lowercase before returning it."
    },
    {
      "content": "Finally, remember that the problem guarantees there is at least one non-banned word, so you don't need to handle cases where all words are banned."
    }
  ],
  "questionNotes": [
    "Words in the paragraph are case-insensitive.",
    "Punctuation should be ignored when counting words.",
    "The result must be returned in lowercase.",
    "The answer is guaranteed to be unique.",
    "The input constraints specify that paragraph length is up to 1000 and banned list length is up to 100."
  ]
}