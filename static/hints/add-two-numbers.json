{
  "hints": [
    {
      "content": "Start by understanding how the linked lists represent numbers. Each node contains a single digit, and the digits are stored in reverse order. For example, the list [2,4,3] represents the number 342."
    },
    {
      "content": "Think about how you would add two numbers digit by digit. You will need to keep track of the carry from one digit addition to the next. How would you implement this in a loop?"
    },
    {
      "content": "Consider how to traverse both linked lists simultaneously. You can use two pointers, each starting at the head of the respective linked lists. What will you do when one list is longer than the other?"
    },
    {
      "content": "Remember to handle the carry after adding the last digits of both lists. If there's still a carry left after processing both lists, you'll need to add a new node for it."
    },
    {
      "content": "When creating the new linked list for the result, think about how you'll build it. You can either create a new head node and append to it or use a dummy node to simplify your logic."
    },
    {
      "content": "Pay attention to the constraints: each linked list has at least one node, and the digits are guaranteed to be between 0 and 9. How does this simplify your implementation?"
    },
    {
      "content": "Consider edge cases such as when one of the linked lists is significantly shorter than the other. What will happen when you reach the end of one list while the other still has digits?"
    },
    {
      "content": "Make sure to test your implementation with cases where the result has more digits than either of the input lists. This will help ensure that your carry logic is correct."
    },
    {
      "content": "As you implement the addition, think about how you will represent the new linked list. You might want to initialize a dummy node to help with easier list construction."
    },
    {
      "content": "Finally, ensure that your function returns the correct linked list format. You should return the next node of your dummy node, which will be the head of the resulting linked list."
    }
  ],
  "questionNotes": [
    "The digits are stored in reverse order.",
    "Each linked list represents a non-negative integer with no leading zeros.",
    "The number of nodes in each linked list is between 1 and 100.",
    "Each node's value is between 0 and 9."
  ]
}