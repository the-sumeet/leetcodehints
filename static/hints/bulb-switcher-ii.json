{
  "hints": [
    {
      "content": "Start by understanding the initial state of the bulbs. All bulbs are turned on initially. Consider how each button affects the state of the bulbs individually."
    },
    {
      "content": "Think about the effects of each button press. For example, Button 1 flips all bulbs, while Button 2 only affects even-numbered bulbs. How does this influence the overall state?"
    },
    {
      "content": "Consider the combinations of button presses. If you press Button 1 once, what happens? What if you press it twice? Explore how repeated presses of the same button affect the bulbs."
    },
    {
      "content": "You need to account for the number of presses. Each press can be any of the four buttons. How can you represent the state of the bulbs after a certain number of presses?"
    },
    {
      "content": "Think about using a set to track unique bulb states. Each unique configuration of bulb states after all presses should be counted only once."
    },
    {
      "content": "Consider the parity of the number of presses. For example, if you press Button 1 an even number of times, the effect cancels out. How does this apply to the other buttons as well?"
    },
    {
      "content": "You can represent the state of the bulbs as a binary number, where 1 represents 'on' and 0 represents 'off'. How can you derive the final state from the number of presses?"
    },
    {
      "content": "Think about the constraints given. With n up to 1000 and presses up to 1000, how can you efficiently compute the number of unique states without simulating every possible combination?"
    },
    {
      "content": "Consider using dynamic programming or memoization to keep track of the states after each button press. This could help avoid recalculating states you've already encountered."
    },
    {
      "content": "Finally, try to outline a plan for your solution. How will you iterate through the number of presses? What data structures will you use to store and count the unique states?"
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= n <= 1000, 0 <= presses <= 1000.",
    "Each bulb's state is represented as 'on' (1) or 'off' (0).",
    "You need to return the count of unique bulb configurations after exactly 'presses' button presses.",
    "Keep track of unique configurations to avoid duplicates in your final count."
  ]
}