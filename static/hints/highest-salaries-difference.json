{
  "hints": [
    {
      "content": "Start by understanding the data structure. You have a list of employees, each with a name, department, and salary. Make sure you can access the salary information easily."
    },
    {
      "content": "Think about how you can group the employees by their department. This will help you calculate the highest and lowest salaries within each department."
    },
    {
      "content": "Consider using a dictionary to store the maximum and minimum salaries for each department. You can initialize the max and min values to extreme values (like negative and positive infinity)."
    },
    {
      "content": "As you iterate through the list of employees, update the maximum and minimum salary for each department based on the current employee's salary."
    },
    {
      "content": "Once you have the maximum and minimum salaries for each department, calculate the difference for each department. This will give you the salary difference you need."
    },
    {
      "content": "You might want to store the differences in a new dictionary or list. Consider how you will structure this data to make it easy to return or display."
    },
    {
      "content": "Remember to handle edge cases, such as departments with only one employee. In such cases, the difference will be zero since the max and min salaries will be the same."
    },
    {
      "content": "Think about how you will return the results. Do you need to return a list of differences, or should you return a dictionary mapping departments to their salary differences?"
    },
    {
      "content": "Consider how to handle departments that might not have any employees. Ensure your solution is robust against such scenarios."
    },
    {
      "content": "Finally, once you have calculated the differences, think about how you will present or output the results. You could sort the differences or return them in a specific format."
    }
  ],
  "questionNotes": [
    "Ensure you understand the structure of the input data, especially how to access nested lists.",
    "Pay attention to how you group employees by department.",
    "Consider edge cases like departments with one employee or no employees at all.",
    "Decide on the output format: list of differences or a dictionary mapping departments to differences."
  ]
}