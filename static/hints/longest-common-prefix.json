{
  "hints": [
    {
      "content": "Start by considering the simplest case: what happens if the input array has only one string? The longest common prefix would be the string itself."
    },
    {
      "content": "Think about how you would compare two strings to find their common prefix. You can iterate through both strings character by character until they differ."
    },
    {
      "content": "Remember that the common prefix cannot be longer than the shortest string in the array. How would you find the length of the shortest string?"
    },
    {
      "content": "Consider using a loop to compare the first string with each of the other strings in the array. What would you do if you find a mismatch?"
    },
    {
      "content": "You can keep track of the common prefix found so far by using a variable. Initialize it with the first string and update it as you compare with others."
    },
    {
      "content": "When comparing characters, make sure to handle cases where you reach the end of one of the strings. How will you handle this situation in your loop?"
    },
    {
      "content": "If at any point the common prefix becomes an empty string, you can immediately return it since there can't be a common prefix longer than that."
    },
    {
      "content": "Consider edge cases, such as when the input array is empty or contains only empty strings. What should your function return in those scenarios?"
    },
    {
      "content": "You might want to implement a helper function to check the common prefix between two strings. This can simplify your main logic."
    },
    {
      "content": "Finally, once you have the logic to compare strings, think about how you will iterate through the array of strings and update your common prefix accordingly."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= strs.length <= 200",
    "Constraints: 0 <= strs[i].length <= 200",
    "Each string consists of only lowercase English letters if it is non-empty.",
    "Return an empty string if there is no common prefix."
  ]
}