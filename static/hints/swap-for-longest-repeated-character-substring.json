{
  "hints": [
    {
      "content": "Start by understanding the problem. You need to find the longest substring with repeated characters after performing one swap. Consider what a substring is and how swapping characters could help in forming longer substrings."
    },
    {
      "content": "Think about how you can identify the longest substring of repeated characters in the original string. A good approach is to use a sliding window technique or two-pointer method to find the maximum length of such substrings."
    },
    {
      "content": "Before considering swaps, try to find the longest substring of repeated characters without any swaps. This will give you a baseline to compare against after considering swaps."
    },
    {
      "content": "When you perform a swap, you can change the positions of two characters. Think about how swapping a character that is not part of the longest substring could potentially extend that substring."
    },
    {
      "content": "Consider the frequency of characters in the string. If you have a character that appears frequently, swapping a less frequent character with one of these could help in forming a longer substring."
    },
    {
      "content": "You may want to create a frequency map of the characters in the string. This will help you understand which characters are the most common and how they can be used in swaps to maximize substring length."
    },
    {
      "content": "Think about edge cases, such as strings where all characters are the same or strings where no characters are repeated. How would your approach handle these cases?"
    },
    {
      "content": "After identifying the longest substring of repeated characters, consider how a single swap can increase its length. You might need to check adjacent characters and their frequencies."
    },
    {
      "content": "To implement this, you can iterate through the string while maintaining a count of the longest substring found. For each character, check if a swap could increase the length of the substring."
    },
    {
      "content": "Finally, consider how to return the length of the longest substring after one swap. Ensure your code handles all edge cases and returns the correct length as specified."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= text.length <= 2 * 10^4",
    "The string consists of lowercase English characters only.",
    "You can only perform one swap.",
    "Return the length of the longest substring with repeated characters after the swap."
  ]
}