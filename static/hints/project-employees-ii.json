{
  "hints": [
    {
      "content": "Start by understanding the structure of the input data. You have two tables: 'Project' and 'Employee'. Each table has specific columns that you will need to work with."
    },
    {
      "content": "Focus on the relationships between the tables. The 'Project' table connects project IDs to employee IDs, while the 'Employee' table contains details about each employee. How will you join these two tables?"
    },
    {
      "content": "Consider how you will represent the data in your code. You might want to use dictionaries or lists to store the information for easy access. Think about how to map employee IDs to their corresponding details."
    },
    {
      "content": "Identify what you need to calculate. The problem may require you to summarize or aggregate data based on the experience of employees assigned to each project. What kind of summary makes sense?"
    },
    {
      "content": "Check if you need to handle cases where employees have the same experience years. How will you decide which employee to select if you need to return one based on experience?"
    },
    {
      "content": "Think about how to structure your output. If you need to return a list of projects with their respective employees, what format will that take? Consider using a list of dictionaries or tuples."
    },
    {
      "content": "Make sure to handle edge cases, such as projects with no employees assigned. What should your output look like in such scenarios? Should those projects be included or excluded?"
    },
    {
      "content": "You may need to sort the employees by their experience years. How will you implement sorting in your data structure? Remember that sorting can affect how you present your final results."
    },
    {
      "content": "As you prepare to write your final function, think about the input parameters. What will your function take as input, and what will it return? Define the expected input and output types clearly."
    },
    {
      "content": "Finally, start drafting your solution. Begin with retrieving the necessary data from the input, then process it to compute the desired output. You can use a loop to iterate through projects and gather employee data."
    }
  ],
  "questionNotes": [
    "The 'Project' table contains pairs of project_id and employee_id.",
    "The 'Employee' table contains employee_id, name, and experience_years.",
    "Each employee_id is unique within the Employee table.",
    "Consider how to handle projects with no employees assigned.",
    "Output format should be clear and structured, likely as a list of projects with associated employee details."
  ]
}