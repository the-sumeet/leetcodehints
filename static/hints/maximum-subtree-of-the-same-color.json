{
  "hints": [
    {
      "content": "Start by understanding the structure of the input. You have a list of edges that define a tree and a list of colors corresponding to each node. How would you represent this tree in a way that allows you to traverse it easily?"
    },
    {
      "content": "Consider how to traverse the tree. A Depth-First Search (DFS) or Breadth-First Search (BFS) could be useful. Think about how you would keep track of the colors as you visit each node."
    },
    {
      "content": "As you traverse the tree, you need to count the number of nodes of the same color in each subtree. How would you maintain a count of nodes for each color while traversing?"
    },
    {
      "content": "Remember that you need to find the maximum count of nodes of the same color in any subtree. How will you compare counts as you finish exploring each subtree?"
    },
    {
      "content": "Consider the base case for your traversal. What should you do when you reach a leaf node? How will you return the count back up the tree?"
    },
    {
      "content": "When traversing, you might want to store the counts of colors in a dictionary or an array. How will you handle the case where you have multiple colors in a subtree?"
    },
    {
      "content": "Make sure to handle cases where all nodes are of the same color. What should your function return in such scenarios? Think about the implications for your maximum count."
    },
    {
      "content": "Think about how to handle the edges of the tree. Since it’s undirected, ensure that you don’t revisit the parent node during your traversal. How will you keep track of visited nodes?"
    },
    {
      "content": "You need to return the size of the largest subtree with the same color. Make sure your return value is clear. Should it be the count of nodes or the size of the subtree?"
    },
    {
      "content": "Finally, as you finalize your solution, ensure that you account for edge cases like an empty tree or a tree with only one node. What should your function return in these cases?"
    }
  ],
  "questionNotes": [
    "The input consists of a list of edges defining a tree structure and a list of colors corresponding to each node.",
    "The tree is undirected, and you need to ensure you do not revisit nodes during traversal.",
    "The output should be the size of the largest subtree where all nodes share the same color.",
    "Consider edge cases such as empty trees or trees with only one node."
  ]
}