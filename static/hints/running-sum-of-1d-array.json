{
  "hints": [
    {
      "content": "Start by understanding what a running sum means. The running sum at index `i` is the total of all elements from index `0` to `i`. For example, if `nums = [1, 2, 3]`, then the running sum at index `1` is `1 + 2`."
    },
    {
      "content": "Consider how you can compute the running sum iteratively. You can maintain a variable to keep track of the cumulative sum as you iterate through the array."
    },
    {
      "content": "Think about how you can initialize your output array. You'll need to create an array of the same length as `nums` to store the running sums."
    },
    {
      "content": "Remember that the first element of the running sum is simply the first element of the input array. So, `runningSum[0] = nums[0]`."
    },
    {
      "content": "As you iterate through the `nums` array, you can update the running sum by adding the current element to the cumulative sum variable. For example: `runningSum[i] = runningSum[i-1] + nums[i]`."
    },
    {
      "content": "Pay attention to the constraints: `1 <= nums.length <= 1000` and `-10^6 <= nums[i] <= 10^6`. Make sure your solution handles the maximum and minimum values appropriately."
    },
    {
      "content": "Consider edge cases, such as when the input array has only one element. What should the output be in that case?"
    },
    {
      "content": "Think about how you will return the result. The output should be the running sum array, so ensure that your function returns this array correctly."
    },
    {
      "content": "Make sure to test your solution with different inputs, including arrays with negative numbers and zeros, to ensure it handles all cases."
    },
    {
      "content": "Finally, your implementation might look something like this: Initialize a cumulative sum variable, loop through the array, and update the running sum array accordingly. Don't forget to return the running sum array at the end!"
    }
  ],
  "questionNotes": [
    "The running sum is defined as runningSum[i] = sum(nums[0]â€¦nums[i]).",
    "The output must be an array of the same length as the input array.",
    "Constraints: 1 <= nums.length <= 1000 and -10^6 <= nums[i] <= 10^6.",
    "Consider edge cases like single-element arrays."
  ]
}