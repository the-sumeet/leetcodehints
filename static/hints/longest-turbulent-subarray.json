{
  "hints": [
    {
      "content": "Start by understanding what a turbulent subarray is. A turbulent subarray has elements that alternate between being greater than and less than their neighbors. For example, in [9, 4, 2], the pattern is 9 > 4 < 2."
    },
    {
      "content": "Consider how to identify the start of a turbulent subarray. You can use a loop to compare each pair of adjacent elements and check if they follow the turbulent pattern."
    },
    {
      "content": "As you iterate through the array, maintain a count of the current length of a turbulent subarray. Reset this count when the turbulent condition is broken."
    },
    {
      "content": "Think about edge cases. What happens if the array has only one element? Remember that a single element is considered a turbulent subarray of length 1."
    },
    {
      "content": "You might want to keep track of the maximum length of any turbulent subarray found so far. Update this maximum whenever you find a longer turbulent subarray."
    },
    {
      "content": "Pay attention to the conditions for turbulence. You need to check if the current index is even or odd to determine the correct comparison for the next element."
    },
    {
      "content": "Instead of checking for both odd and even cases separately, think about using a flag to indicate the expected comparison direction after each valid comparison."
    },
    {
      "content": "Consider the complexity of your solution. A straightforward approach would involve a single pass through the array, which would give you O(n) time complexity."
    },
    {
      "content": "When comparing elements, be careful with equal elements. If two adjacent elements are equal, they break the turbulent condition, so you should reset your count."
    },
    {
      "content": "Finally, ensure you return the maximum length found. After completing the iteration, return the maximum length of the turbulent subarray you tracked."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= arr.length <= 40,000",
    "Element values: 0 <= arr[i] <= 10^9",
    "A single element array returns a length of 1.",
    "Turbulence requires strict inequalities; equal adjacent elements break the pattern."
  ]
}