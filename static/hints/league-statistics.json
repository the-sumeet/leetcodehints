{
  "hints": [
    {
      "content": "Start by understanding the structure of the input data. You have two main parts: 'Teams' and 'Matches'. Each team has an ID and a name, while each match has IDs for the home and away teams along with their respective goals."
    },
    {
      "content": "Focus on how to iterate through the matches to calculate statistics. You'll need to keep track of points, goals scored, and goals conceded for each team. Consider using a dictionary to store these statistics indexed by team IDs."
    },
    {
      "content": "Remember that each match affects two teams: the home team and the away team. When processing a match, you'll need to update statistics for both teams based on the goals scored."
    },
    {
      "content": "When calculating points, remember the rules: a win gives 3 points, a draw gives 1 point, and a loss gives 0 points. Ensure you implement this logic correctly when comparing the goals."
    },
    {
      "content": "Consider edge cases such as matches that end in a draw. You need to ensure that both teams receive the correct points and that their goals scored and conceded are updated appropriately."
    },
    {
      "content": "As you accumulate statistics, think about how to store the results. You might want to create a list of dictionaries or tuples for each team that includes their ID, name, points, goals scored, and goals conceded."
    },
    {
      "content": "After processing all matches, you'll need to sort the teams based on points. If two teams have the same points, you should use goals scored as a tiebreaker."
    },
    {
      "content": "When returning the final results, ensure you format the output correctly. You may need to return a list of teams sorted by points, including their names and statistics."
    },
    {
      "content": "Don't forget to handle cases where the input might be empty or contain unexpected data. Consider what should happen if there are no matches or teams provided."
    },
    {
      "content": "Finally, implement your solution step by step, testing each part as you go. Start by calculating points and goals, then move on to sorting and formatting the output. This will help you catch errors early."
    }
  ],
  "questionNotes": [
    "Input consists of two parts: 'Teams' and 'Matches'.",
    "Each team has a unique ID and a name.",
    "Each match includes home and away team IDs and their goals.",
    "Points: Win = 3, Draw = 1, Loss = 0.",
    "Sort teams by points, then by goals scored in case of ties.",
    "Output format should include team ID, name, points, goals scored, and goals conceded."
  ]
}