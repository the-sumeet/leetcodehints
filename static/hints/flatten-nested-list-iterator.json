{
  "hints": [
    {
      "content": "Start by understanding the structure of the input. The nested list can contain integers and other lists, which means you will need to handle both types when flattening the structure."
    },
    {
      "content": "Consider how you will traverse the nested list. A recursive approach could be useful, but think about how you can also use an iterative approach with a stack to avoid deep recursion."
    },
    {
      "content": "Remember that your iterator should maintain the current position in the flattened list. You might want to use a stack to keep track of where you are in the nested structure."
    },
    {
      "content": "In your implementation, the `hasNext()` method should check if there are any more integers to return. This means you need to ensure that you are correctly navigating through the nested lists."
    },
    {
      "content": "When implementing the `next()` method, make sure it returns the next integer in the flattened order. You might need to pop elements from your stack and check if they are integers or lists."
    },
    {
      "content": "Think about edge cases, such as when the nested list is empty or contains only empty lists. Your code should handle these cases gracefully."
    },
    {
      "content": "Consider how you will convert a list of `NestedInteger` objects into integers. You might need to define a helper method to check if an object is an integer and to retrieve its value."
    },
    {
      "content": "As you implement the iterator, keep track of the current position in the stack. You may need to push lists onto the stack and pop them off as you encounter integers."
    },
    {
      "content": "Make sure your implementation is efficient. You should aim for a time complexity of O(n) for flattening the list, where n is the total number of integers in the nested structure."
    },
    {
      "content": "Finally, ensure your class adheres to the expected interface. The `NestedIterator` should provide the `next()` and `hasNext()` methods as specified in the problem statement."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= nestedList.length <= 500",
    "Values of integers range from -10^6 to 10^6.",
    "Ensure that the iterator maintains the order of integers as they appear in the nested list.",
    "Handle cases where nested lists are empty or contain only integers."
  ]
}