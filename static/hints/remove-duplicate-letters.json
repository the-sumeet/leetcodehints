{
  "hints": [
    {
      "content": "Start by understanding that you need to keep each character only once in the result. Consider how you can track which characters have already been added to the final result."
    },
    {
      "content": "Think about how you can ensure that the result is in lexicographical order. You might need to compare characters and decide whether to keep or discard them based on their order."
    },
    {
      "content": "You can use a stack to build the result. When you encounter a character, check if it can be added to the stack while maintaining the order."
    },
    {
      "content": "Remember that if a character is already in the stack, you should not add it again. You can use a set to keep track of the characters that are currently in the stack."
    },
    {
      "content": "As you iterate through the string, keep track of the last occurrence of each character. This will help you decide whether you can safely remove a character from the stack."
    },
    {
      "content": "When considering whether to pop a character from the stack, check if the character at the top of the stack is greater than the current character and if it appears later in the string."
    },
    {
      "content": "Make sure to handle edge cases, such as when the string is already in order or when it contains only one character."
    },
    {
      "content": "After processing all characters, the stack will contain the characters in the correct order. You can then convert the stack to a string for the final result."
    },
    {
      "content": "Consider using a frequency array or a dictionary to count the occurrences of each character, which will help you know when you can stop removing characters from the stack."
    },
    {
      "content": "Finally, ensure that you return the result as a string. The final output should be the concatenation of the characters in the stack."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= s.length <= 10^4; s consists of lowercase English letters.",
    "Each letter must appear once and only once in the result.",
    "The result must be the smallest in lexicographical order among all possible results."
  ]
}