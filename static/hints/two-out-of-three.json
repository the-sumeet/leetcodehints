{
  "hints": [
    {
      "content": "Start by thinking about how to identify the elements that are common between the arrays. You can use sets to help with this since they automatically handle duplicates."
    },
    {
      "content": "Consider how you might iterate through each of the three arrays. You could use a loop to go through each array and add elements to a set for tracking occurrences."
    },
    {
      "content": "As you add elements to your tracking structure, think about how you can keep count of how many arrays each element appears in. A dictionary might be useful for this purpose."
    },
    {
      "content": "Remember that you only want elements that appear in at least two arrays. So, after counting the occurrences, you will need to check for counts greater than or equal to 2."
    },
    {
      "content": "When using a dictionary to count occurrences, the keys will be the elements from the arrays, and the values will be the count of how many arrays each element appears in."
    },
    {
      "content": "Don't forget to ensure that your final output only contains distinct values. Using a set for your final output can help with this."
    },
    {
      "content": "Think about edge cases, such as when one or more of the input arrays are empty. How should your function handle these cases?"
    },
    {
      "content": "Consider the efficiency of your approach. Since the maximum length of each array is 100, ensure your solution runs efficiently within these constraints."
    },
    {
      "content": "Once you have your counts, you can create a list of the elements that have a count of 2 or more. This will be your final result."
    },
    {
      "content": "Finally, remember that the order of the output does not matter. You can return the results in any order, so focus on correctness first."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= nums1.length, nums2.length, nums3.length <= 100",
    "Element values: 1 <= nums1[i], nums2[j], nums3[k] <= 100",
    "Return a distinct array containing values present in at least two arrays.",
    "Output order does not matter."
  ]
}