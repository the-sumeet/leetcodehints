{
  "hints": [
    {
      "content": "Start by filtering the cards to only include those that contain the letter 'x'. This is important because you can only form pairs from these cards."
    },
    {
      "content": "Remember that two cards are compatible if they differ in exactly one position. Think about how you can compare two strings to check this condition."
    },
    {
      "content": "To compare two cards, you can iterate through their characters and count how many positions are different. If the count is exactly one, they are compatible."
    },
    {
      "content": "Consider using a nested loop to check each pair of cards for compatibility. However, be mindful of performance since you may have up to 100,000 cards."
    },
    {
      "content": "When you find a compatible pair, you should remove both cards from consideration for future pairs. Think about how you can maintain the state of the remaining cards."
    },
    {
      "content": "It's useful to keep track of the points scored each time you successfully remove a pair. You can use a simple counter for this."
    },
    {
      "content": "After removing a pair of cards, you should check again for new pairs that can be formed with the remaining cards. This may require repeating the compatibility check."
    },
    {
      "content": "Consider edge cases where there are no cards containing 'x' or when all cards containing 'x' are incompatible. How will your solution handle these cases?"
    },
    {
      "content": "Think about the efficiency of your solution. If you find that checking all pairs is too slow, consider alternative data structures or methods to speed up the compatibility checks."
    },
    {
      "content": "You are very close to the solution! Implement the logic to check for pairs, remove them, and increment the score until no more pairs can be formed. Make sure to return the total score at the end."
    }
  ],
  "questionNotes": [
    "Constraints: 2 <= cards.length <= 100000",
    "Each cards[i].length == 2",
    "Each cards[i] is composed of only lowercase English letters between 'a' and 'j'.",
    "x is a lowercase English letter between 'a' and 'j'.",
    "Two cards are compatible if they differ in exactly 1 position."
  ]
}