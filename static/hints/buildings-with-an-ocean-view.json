{
  "hints": [
    {
      "content": "Start by understanding the problem statement. You need to determine which buildings have an ocean view. A building has an ocean view if there are no taller buildings to its right."
    },
    {
      "content": "Consider how you might iterate through the list of building heights. Remember that the view is determined by the heights of the buildings to the right of the current building."
    },
    {
      "content": "Think about how you could keep track of the tallest building you've seen as you iterate from right to left. This will help you determine if the current building has a view."
    },
    {
      "content": "As you iterate, compare the height of the current building with the tallest building you've seen so far. If the current building is taller, it has a view, and you should update your tallest building."
    },
    {
      "content": "Remember to handle the output format. You need to return the indices of the buildings that have an ocean view. Think about how you can store these indices as you find them."
    },
    {
      "content": "Consider edge cases such as an empty list of buildings or a list where all buildings have the same height. What should your function return in these cases?"
    },
    {
      "content": "When storing the indices of buildings with a view, think about whether you should store them in the order you find them or in reverse order. How does this affect the final output?"
    },
    {
      "content": "You might want to use a list to collect the indices of buildings with a view. Make sure to reverse this list before returning it if you have collected them in reverse order."
    },
    {
      "content": "Consider the time complexity of your approach. If you are iterating through the list only once, what would the time complexity be? How does this compare to other potential solutions?"
    },
    {
      "content": "Finally, ensure your solution accounts for all buildings. After you've implemented your logic, test it with various cases, including edge cases, to confirm it works as expected."
    }
  ],
  "questionNotes": [
    "You need to return the indices of buildings with an ocean view.",
    "Buildings are represented by their heights in a list.",
    "The view is determined by the tallest building to the right.",
    "Consider edge cases like empty lists or lists with identical heights.",
    "The output should be in the order of the indices of buildings with views."
  ]
}