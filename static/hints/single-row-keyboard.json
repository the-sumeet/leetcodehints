{
  "hints": [
    {
      "content": "Start by understanding the layout of the keyboard. The keyboard is a single row of characters, which means you can think of it as a string where each character has a specific index. For example, 'a' is at index 0, 'b' is at index 1, and so on."
    },
    {
      "content": "Consider how you would calculate the distance between two characters on this keyboard. The distance can be thought of as the absolute difference between their indices. For instance, the distance between 'a' and 'c' is |0 - 2| = 2."
    },
    {
      "content": "You need to process a sequence of characters and calculate the total distance as you type them. Start with the initial position at the first character of the keyboard (index 0) and move to each character in the input string."
    },
    {
      "content": "Think about how to map each character to its index efficiently. You could create a dictionary that maps each character to its corresponding index on the keyboard. This will allow you to quickly look up the index of any character."
    },
    {
      "content": "When you read the characters from the input string, you will need to keep track of your current position on the keyboard. After processing each character, update your current position to that character's index."
    },
    {
      "content": "Remember to handle the case where the input string is empty. What should your function return in that case? Consider returning 0 since no typing is needed."
    },
    {
      "content": "As you calculate the total distance, make sure to accumulate the distances in a variable. You can initialize this variable to 0 and add the distances as you move from one character to the next."
    },
    {
      "content": "Take care of the order of characters in the input string. The distance calculation should be sequential, meaning you always calculate the distance from the last character typed to the next character in the string."
    },
    {
      "content": "Before finalizing your solution, think about the constraints. Are there any limits on the length of the input strings? Ensure your solution handles edge cases, such as very long strings or characters not present on the keyboard."
    },
    {
      "content": "Finally, your function should return the total distance calculated. Make sure to test your solution with different inputs to verify its correctness, including edge cases like typing the same character multiple times."
    }
  ],
  "questionNotes": [
    "The keyboard is a single row: 'abcdefghijklmnopqrstuvwxyz'.",
    "Input strings can contain any characters, but only those present in the keyboard should be considered.",
    "The initial position is at the first character of the keyboard.",
    "Return the total distance traveled as an integer.",
    "Consider edge cases such as empty input strings."
  ]
}