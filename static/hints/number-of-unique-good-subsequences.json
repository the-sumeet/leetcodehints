{
  "hints": [
    {
      "content": "Start by understanding what constitutes a good subsequence. A good subsequence is non-empty and does not have leading zeros, except for the single character '0'."
    },
    {
      "content": "Consider how subsequences are formed. You can create a subsequence by including or excluding each character in the string. How would you approach generating all subsequences?"
    },
    {
      "content": "Think about the implications of leading zeros. If you encounter a '0' at the start of your subsequence, it can only be included as a single '0' and not as part of a longer sequence."
    },
    {
      "content": "What happens to subsequences when you encounter '1's? Remember, any subsequence that ends with '1' will be valid, and you can combine '1's with '0's."
    },
    {
      "content": "Count the occurrences of '0's and '1's in the string. This will help you understand how many unique subsequences you can form based on the counts."
    },
    {
      "content": "Consider the case where there are no '1's in the string. What would the output be? This helps you identify edge cases."
    },
    {
      "content": "When you have both '0's and '1's, think about how to combine them. For each '1', you can create new subsequences by appending it to existing subsequences."
    },
    {
      "content": "Use the counts of '0's and '1's to derive a formula. For example, if there are `count1` '1's and `count0` '0's, how can you express the number of unique good subsequences?"
    },
    {
      "content": "Remember to account for the empty subsequence. Since we want only non-empty good subsequences, make sure to exclude it from your final count."
    },
    {
      "content": "Think about how to handle duplicates. If you have multiple '0's or '1's, how do you ensure that you only count unique subsequences?"
    },
    {
      "content": "Consider using a mathematical approach to count combinations. For each '1', you can think of it as a binary choice: include it or not."
    },
    {
      "content": "You might want to use modular arithmetic since the result can be very large. Remember to apply modulo `10^9 + 7` to your final answer."
    },
    {
      "content": "Try to derive a formula based on the counts of '0's and '1's. For example, if `count1` is the number of '1's and `count0` is the number of '0's, how can you express the unique subsequences mathematically?"
    },
    {
      "content": "The final formula should combine the contributions from '1's and '0's. Think about how many subsequences can be formed by combining them."
    },
    {
      "content": "As a final thought, ensure your implementation efficiently handles the constraints, especially since the length can go up to `10^5`. How will you optimize your solution?"
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= binary.length <= 10^5",
    "Binary string consists only of '0's and '1's.",
    "A good subsequence is non-empty and has no leading zeros except for '0'.",
    "Return the result modulo 10^9 + 7."
  ]
}