{
  "hints": [
    {
      "content": "Start by understanding what 'upper bound' means in the context of an array. The upper bound of a number in an array is the smallest index at which the number could be inserted while maintaining the array's sorted order."
    },
    {
      "content": "Consider how the array is structured. Is it sorted? The problem assumes that the input array is sorted, which simplifies how you can search for the upper bound."
    },
    {
      "content": "Think about the return value. If the number is found in the array, you should return the index of the first element that is greater than the given number."
    },
    {
      "content": "What should you return if the number is larger than all elements in the array? Make sure to handle this case correctly, as it may involve returning an index that is equal to the length of the array."
    },
    {
      "content": "Consider edge cases such as an empty array or an array with only one element. How would your function behave in these scenarios?"
    },
    {
      "content": "You might want to use a binary search approach to efficiently find the upper bound. This can reduce the time complexity to O(log n) compared to a linear search."
    },
    {
      "content": "When implementing binary search, remember to adjust your search range based on whether the middle element is less than or greater than the target number."
    },
    {
      "content": "If you find an element equal to the target during your search, continue searching to the right to find the first element that is greater."
    },
    {
      "content": "Make sure to handle duplicate values correctly. If the target number appears multiple times, you should still find the first occurrence of a number greater than the target."
    },
    {
      "content": "Your function should return an index. Ensure that your final implementation correctly returns the index of the upper bound, or the length of the array if the target is greater than all elements."
    }
  ],
  "questionNotes": [
    "The input array is sorted in non-decreasing order.",
    "You need to return the index of the first element greater than the target number.",
    "If the target number is greater than all elements, return the length of the array.",
    "Consider edge cases like an empty array or arrays with duplicate values."
  ]
}