{
  "hints": [
    {
      "content": "Start by understanding what a square streak is. A square streak is a subsequence of at least length 2 where each element (after sorting) is the square of the previous one. For example, if you have [2, 4, 16], it qualifies because 4 is 2 squared and 16 is 4 squared."
    },
    {
      "content": "Consider how to efficiently find subsequences in the array. You might want to sort the array first, as this will help you easily check the conditions for a square streak."
    },
    {
      "content": "Think about how to store the elements of the array. A set or a dictionary could be useful for quickly checking if a number's square exists in the original array."
    },
    {
      "content": "When iterating through the sorted array, you can start from each element and try to build a square streak. Keep track of the current length of the streak as you find valid squares."
    },
    {
      "content": "Remember that the subsequence must have at least 2 elements. So, when you find a valid square streak, check its length before considering it as a potential answer."
    },
    {
      "content": "As you build the square streak, consider edge cases where numbers might not have a square in the array. Ensure your logic handles cases where a number's square is not present."
    },
    {
      "content": "You might want to use a loop to go through each number, and for each number, check if its square exists in the array. If it does, continue building the streak."
    },
    {
      "content": "Keep track of the maximum length of any square streak you find. If you finish checking all numbers and find no valid streaks, remember to return -1."
    },
    {
      "content": "When returning the result, ensure you handle the case where no valid square streaks were found. The output should be -1 in that case."
    },
    {
      "content": "Finally, think about the time complexity of your solution. Sorting the array takes O(n log n), and checking for squares will take additional time depending on how you implement it. Aim for an efficient solution."
    }
  ],
  "questionNotes": [
    "The subsequence must have at least 2 elements.",
    "Return -1 if no square streak exists.",
    "Consider using a set for quick lookups of squares.",
    "The input array can contain duplicates; handle them appropriately.",
    "The maximum length of nums is 100,000, so ensure your solution is efficient."
  ]
}