{
  "hints": [
    {
      "content": "Start by understanding the types of bills you will encounter. Customers can pay with $5, $10, or $20 bills. How does each type of bill affect your ability to give change?"
    },
    {
      "content": "Remember that you start with no money in the register. Consider what happens when the first customer pays with a $5 bill. What change do you need to give for each type of bill?"
    },
    {
      "content": "Think about how you can keep track of the number of $5 and $10 bills you have after each transaction. You might want to use two counters to represent these amounts."
    },
    {
      "content": "When a customer pays with a $10 bill, you need to give back $5. Ensure that you check if you have at least one $5 bill available before proceeding with the transaction."
    },
    {
      "content": "If a customer pays with a $20 bill, you need to provide $15 in change. This can be done either by giving one $10 bill and one $5 bill or three $5 bills. Think about how to prioritize which bills to use."
    },
    {
      "content": "Consider edge cases where you might run out of $5 or $10 bills. For example, if you have only $10 bills and a customer pays with a $20 bill, what will you do?"
    },
    {
      "content": "As you process each bill, update your counters accordingly. After each transaction, make sure to check if you can provide the required change before moving to the next customer."
    },
    {
      "content": "You can iterate through the list of bills and apply the rules for giving change. Use a loop to go through each customer and a conditional structure to handle the different bill payments."
    },
    {
      "content": "Make sure to return false as soon as you encounter a situation where you cannot provide the correct change. This will save unnecessary processing time."
    },
    {
      "content": "Finally, ensure that after processing all customers, if you never encountered a situation where you couldn't provide change, you return true. Think about how you would structure your return statement."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= bills.length <= 10",
    "Each bills[i] is either 5, 10, or 20.",
    "You start with no money in hand.",
    "Return true if you can provide change to every customer, otherwise return false."
  ]
}