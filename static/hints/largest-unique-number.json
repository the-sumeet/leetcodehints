{
  "hints": [
    {
      "content": "Start by understanding the goal of the problem. You need to find the largest unique number in the given list. A unique number is one that appears only once in the list."
    },
    {
      "content": "Consider how you can keep track of the frequency of each number in the list. A dictionary or a hash map could be useful for counting occurrences."
    },
    {
      "content": "As you iterate through the list to count occurrences, think about how you will differentiate between unique numbers and those that appear multiple times."
    },
    {
      "content": "Once you have the frequency of each number, focus on how to identify the largest number among those that are unique. You might want to maintain a separate list of unique numbers."
    },
    {
      "content": "Remember to handle edge cases, such as when there are no unique numbers at all. What should your function return in that case?"
    },
    {
      "content": "After identifying the unique numbers, consider how you will determine the maximum value among them. You could use a simple comparison or a built-in function."
    },
    {
      "content": "Think about the time complexity of your approach. Using a dictionary to count frequencies is O(n), but how efficient is your method for finding the maximum unique number?"
    },
    {
      "content": "When implementing your solution, ensure that you are correctly handling the input list. What if the list is empty or contains only duplicates?"
    },
    {
      "content": "As you finalize your solution, consider how you will return the result. Should you return a specific value, or handle cases where no unique number exists differently?"
    },
    {
      "content": "To put it all together, you might start with counting the occurrences, filter the unique numbers, and then find the maximum. Make sure your final function is clear and handles all edge cases."
    }
  ],
  "questionNotes": [
    "Input is a list of integers.",
    "You need to return the largest integer that appears exactly once.",
    "If there are no unique numbers, define what your function should return (e.g., None or -1).",
    "Consider cases with negative numbers and zero.",
    "The function should handle an empty list gracefully."
  ]
}