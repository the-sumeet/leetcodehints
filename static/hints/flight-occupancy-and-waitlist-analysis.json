{
  "hints": [
    {
      "content": "Start by understanding the data structure. You have two main entities: Flights and Passengers. Each flight has a unique ID and a capacity, while each passenger is associated with a flight ID. Make sure you can access and iterate through these lists."
    },
    {
      "content": "Consider how to represent the occupancy of each flight. You might want to create a mapping of flight IDs to their current occupancy count. This will help you track how many passengers are assigned to each flight."
    },
    {
      "content": "Think about how to handle the situation when a flight reaches its capacity. You will need to implement a mechanism to check if a passenger can be added to a flight or if they should be placed on a waitlist."
    },
    {
      "content": "As you process each passenger, keep track of the number of passengers assigned to each flight. You could use a dictionary where the keys are flight IDs and the values are the current number of passengers."
    },
    {
      "content": "Don't forget to account for edge cases, such as a flight with zero capacity or a situation where there are more passengers than available seats across all flights. How will you handle these scenarios?"
    },
    {
      "content": "When adding a passenger to a flight, if the flight is full, you should add that passenger to a waitlist. Consider how you will store this waitlist and how it will be structured."
    },
    {
      "content": "Think about the output format. You might need to return a list of flights with their occupancy status and any waitlisted passengers. Plan how you will structure this output."
    },
    {
      "content": "Consider how to efficiently check the occupancy of each flight and how to update it as you process each passenger. You may want to iterate through the list of passengers and update your flight occupancy mapping accordingly."
    },
    {
      "content": "As you finalize your approach, ensure you handle cases where multiple flights have the same occupancy. How will you decide which flight a passenger should be assigned to if they all have the same number of available seats?"
    },
    {
      "content": "You are almost there! Start implementing your logic to loop through passengers, check flight capacities, and manage the waitlist. Remember to update the occupancy count for each flight as you go."
    }
  ],
  "questionNotes": [
    "Flights have unique IDs and capacities.",
    "Passengers are associated with flight IDs.",
    "Handle cases where flights are at full capacity.",
    "Consider edge cases like zero capacity flights.",
    "Output should include flight occupancy and waitlist information."
  ]
}