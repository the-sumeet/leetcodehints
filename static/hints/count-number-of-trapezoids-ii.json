{
  "hints": [
    {
      "content": "Start by understanding the definition of a trapezoid. Remember, a trapezoid has at least one pair of parallel sides. This means you will need to identify pairs of points that can form these sides."
    },
    {
      "content": "Consider how to calculate the slope between two points. The slope between two points (x1, y1) and (x2, y2) can be calculated as (y2 - y1) / (x2 - x1). Be careful with vertical lines where x1 equals x2."
    },
    {
      "content": "Think about how to store the slopes for pairs of points. You might want to use a dictionary where the key is the slope and the value is a list of pairs of points that have that slope."
    },
    {
      "content": "When iterating through the points, ensure you are considering all pairs. Use a nested loop to generate all combinations of two points from your list of points."
    },
    {
      "content": "Remember that you need to choose four distinct points to form a trapezoid. Ensure your pairs of points do not overlap when you select them for the trapezoid."
    },
    {
      "content": "Given that you need unique trapezoids, think about how to ensure that you donâ€™t count the same trapezoid multiple times. You might want to use a set to track unique trapezoids."
    },
    {
      "content": "When you find two pairs of points that share the same slope, you can form a trapezoid with the other two points. Make sure to check that these points are distinct."
    },
    {
      "content": "Consider edge cases where all points are collinear. In this scenario, no trapezoids can be formed. How will you handle such cases in your solution?"
    },
    {
      "content": "You may need to handle floating-point precision issues when calculating slopes. Consider using a rational representation (like a tuple of integers) for slopes to avoid inaccuracies."
    },
    {
      "content": "As you build your solution, keep track of how many unique trapezoids you can form from each pair of slopes. This will help you aggregate counts effectively."
    },
    {
      "content": "Think about the efficiency of your solution. With a maximum of 500 points, consider how many pairs you will need to check and how to optimize your approach."
    },
    {
      "content": "After calculating the slopes and counting pairs, remember to return the total count of unique trapezoids. Ensure your return format matches the problem's requirements."
    },
    {
      "content": "Consider using combinations from libraries like itertools if you are working in Python, as this can simplify the process of generating pairs of points."
    },
    {
      "content": "Make sure to test your solution with edge cases, such as points that form a square or rectangle, as these can have multiple valid trapezoid configurations."
    },
    {
      "content": "Finally, ensure your solution is modular. Break down your code into functions that handle specific tasks, such as calculating slopes, counting trapezoids, and checking uniqueness."
    }
  ],
  "questionNotes": [
    "Constraints: 4 <= points.length <= 500",
    "Points are pairwise distinct.",
    "Return the number of unique trapezoids formed by any four distinct points.",
    "A trapezoid must have at least one pair of parallel sides."
  ]
}