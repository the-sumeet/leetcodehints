{
  "hints": [
    {
      "content": "Start by understanding the problem requirements. You need to find combinations of numbers that sum up to a target. Remember that each number can be used multiple times."
    },
    {
      "content": "Think about how you can explore all possible combinations. A common approach for problems like this is to use backtracking, where you build combinations incrementally."
    },
    {
      "content": "Consider how you will keep track of the current combination of numbers you are building. You might want to use a list to store the current combination as you explore."
    },
    {
      "content": "Remember to check if the sum of the current combination equals the target. If it does, you should save that combination to your results."
    },
    {
      "content": "When you exceed the target sum, you should stop exploring that path. This is where you can prune your search space."
    },
    {
      "content": "Since the same number can be used multiple times, when you recurse, you should not move to the next candidate. Instead, you can call the function again with the same index."
    },
    {
      "content": "Make sure to handle cases where the target is less than the smallest candidate. In such cases, you can immediately return an empty list."
    },
    {
      "content": "Think about how to avoid duplicates in your results. Since candidates are distinct, focus on the frequency of numbers in your current combination."
    },
    {
      "content": "You should return the results in a specific format: a list of lists. Each inner list represents a unique combination that sums to the target."
    },
    {
      "content": "As a final step, implement the backtracking function. It should take parameters for the current combination, the current index, and the remaining target. Remember to include base cases for when to add combinations to the results."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= candidates.length <= 30",
    "All elements of candidates are distinct.",
    "1 <= target <= 40",
    "You can use the same number multiple times.",
    "Return format: List of lists containing unique combinations."
  ]
}