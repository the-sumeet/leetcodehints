{
  "hints": [
    {
      "content": "Start by identifying the largest element in the array. Remember that if there are multiple largest elements, you should choose the one with the smallest index."
    },
    {
      "content": "Once you find the largest element, you need to find the next largest element that is strictly smaller. Think about how you can efficiently track the unique values in the array."
    },
    {
      "content": "Consider using a data structure that allows you to maintain a sorted list of unique values. This will help you quickly find the next largest value when you need it."
    },
    {
      "content": "As you perform operations, keep track of how many times you need to reduce the largest element. This count will be your final answer."
    },
    {
      "content": "What happens if all elements in the array are already equal? Make sure to handle this edge case early in your solution to avoid unnecessary calculations."
    },
    {
      "content": "Think about how the operations will affect the array. After reducing an element, it may become the new largest element in the next iteration."
    },
    {
      "content": "To optimize your solution, consider the constraints of the problem. You need to ensure your approach works efficiently for the maximum input size."
    },
    {
      "content": "You may want to use a loop that continues until all elements are equal. Each iteration should focus on finding the largest and the next largest values."
    },
    {
      "content": "Remember that the return value should be the total number of operations performed. Make sure to increment your operation counter correctly during each iteration."
    },
    {
      "content": "As a final step, think about how you will implement the logic to find the largest and next largest values. You might want to use sorting or a max-heap to facilitate this."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= nums.length <= 5 * 10^4",
    "Constraints: 1 <= nums[i] <= 5 * 10^4",
    "Return the total number of operations needed to make all elements equal.",
    "If all elements are already equal, return 0.",
    "If there are multiple largest values, select the one with the smallest index."
  ]
}