{
  "hints": [
    {
      "content": "Start by understanding the structure of the matrix. It is an n x n matrix, which means it has n rows and n columns. Each element in the matrix is an integer between 1 and n, inclusive."
    },
    {
      "content": "Think about how you can check each row of the matrix. You need to ensure that every row contains all the integers from 1 to n. Consider using a set to track the numbers you encounter in each row."
    },
    {
      "content": "After checking the rows, you also need to check the columns. You can do this by iterating over the columns while keeping track of the numbers in each column, similar to how you did for the rows."
    },
    {
      "content": "Remember that for a valid matrix, each row and each column must contain unique numbers from 1 to n. This means that if you find a duplicate in any row or column, you can immediately return false."
    },
    {
      "content": "You can utilize a loop to iterate through each row and another nested loop to check the elements in that row. For each row, initialize a set to collect the numbers."
    },
    {
      "content": "When checking the rows, after collecting numbers in the set, you should compare the size of the set to n. If they are not equal, it means some numbers are missing or there are duplicates."
    },
    {
      "content": "For checking the columns, you can either collect numbers in a similar way as you did for rows or use a different approach where you check each element in the column during the row checks."
    },
    {
      "content": "Consider edge cases, such as the smallest matrix (1x1) and the largest (100x100). Make sure your solution handles these cases efficiently."
    },
    {
      "content": "It might be helpful to create a function that checks if a given set of numbers matches the expected set {1, 2, ..., n}. This will simplify your validation logic."
    },
    {
      "content": "Finally, remember to return true only if both row and column checks pass. You can structure your function to return false immediately when a check fails."
    }
  ],
  "questionNotes": [
    "An n x n matrix must have n rows and n columns.",
    "Each element must be an integer between 1 and n, inclusive.",
    "Check both rows and columns for the presence of all integers from 1 to n.",
    "Duplicate numbers in any row or column invalidate the matrix."
  ]
}