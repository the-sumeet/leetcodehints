{
  "hints": [
    {
      "content": "Start by understanding the structure of the binary tree and how a pre-order traversal works. In pre-order traversal, you visit the root node first, then the left subtree, followed by the right subtree."
    },
    {
      "content": "Consider how you can represent the 'linked list' using the existing TreeNode structure. Remember, the left child should be set to null, and the right child should point to the next node in the list."
    },
    {
      "content": "Think about how you can traverse the tree. You might want to use a recursive approach to achieve the pre-order traversal. How would you keep track of the last node processed?"
    },
    {
      "content": "If you're using recursion, remember that you can modify the tree in place. You can keep a reference to the previous node and update its right child as you traverse."
    },
    {
      "content": "Consider the base case for your recursive function. What should happen when you reach a null node? Make sure to handle this properly to avoid unnecessary operations."
    },
    {
      "content": "As you traverse the tree, ensure that after visiting a node, you set its left child to null. This is crucial for maintaining the linked list structure."
    },
    {
      "content": "When you visit a node, you should also update the previous node's right child to point to the current node. This will help you build the linked list as you go."
    },
    {
      "content": "Think about how you can implement this using an iterative approach with a stack if recursion is not your preferred method. How would you manage the stack to maintain the order?"
    },
    {
      "content": "Consider edge cases such as an empty tree or a tree with only one node. How would your function handle these scenarios? Make sure your solution is robust."
    },
    {
      "content": "Finally, remember to return the modified tree's root. While you won't be returning a new structure, you need to ensure the root is correctly set up for the linked list format."
    }
  ],
  "questionNotes": [
    "The binary tree is represented using the TreeNode class.",
    "The left child must always be null in the final linked list.",
    "The right child should point to the next node in pre-order traversal.",
    "The number of nodes is between 0 and 2000.",
    "Node values range from -100 to 100."
  ]
}