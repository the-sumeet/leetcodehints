{
  "hints": [
    {
      "content": "Start by understanding what the problem is asking. You need to count substrings that consist of only one distinct letter. For example, in 'aaaba', the substrings 'aaa' and 'aa' are valid, while 'ab' is not."
    },
    {
      "content": "Consider how you can identify these substrings. A substring with only one distinct letter will be a continuous sequence of the same character. Think about how you can traverse the string to find these sequences."
    },
    {
      "content": "As you traverse the string, keep track of the current character and its count. For instance, if you encounter 'aaa', you can count it as 3 single-letter substrings, 2 two-letter substrings, and 1 three-letter substring."
    },
    {
      "content": "You can use a loop to go through each character in the string. If the current character is the same as the previous one, increment a count. If it's different, you will calculate the contribution of the previous character's sequence to the total count."
    },
    {
      "content": "Think about how to calculate the number of substrings from a sequence of length `n`. If a character repeats `n` times, the number of valid substrings can be calculated using the formula: `n * (n + 1) / 2`."
    },
    {
      "content": "Make sure to handle edge cases, such as an empty string or a string with all identical characters. For an empty string, the count should be 0, while for a string like 'aaaa', you should apply the formula directly."
    },
    {
      "content": "Consider how you will store the total count of substrings as you iterate through the string. You might want to initialize a variable to keep track of this total and update it as you find valid substrings."
    },
    {
      "content": "As you implement your loop, remember to reset your count whenever you encounter a new character. This will allow you to start counting a new sequence of characters."
    },
    {
      "content": "Be careful with the loop boundaries. Ensure that your loop correctly handles the last sequence of characters after the loop ends. You may need to add a final count after the loop to capture the last group."
    },
    {
      "content": "Finally, review your implementation to ensure it correctly counts all possible substrings. Consider testing with various inputs, including strings with different lengths and character distributions, to validate your solution."
    }
  ],
  "questionNotes": [
    "You need to count substrings with only one distinct letter.",
    "Substrings are continuous sequences of characters.",
    "Edge cases include empty strings and strings with all identical characters.",
    "The output should be a single integer representing the count of valid substrings."
  ]
}