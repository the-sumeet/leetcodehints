{
  "hints": [
    {
      "content": "Start by understanding the structure of a binary tree. Each node has a value, a left child, and a right child. The tilt of a node is defined as the absolute difference between the sums of its left and right subtrees."
    },
    {
      "content": "Consider how you can traverse the tree. A depth-first search (DFS) approach might be useful here. Think about how you can calculate the sum of the left and right subtrees as you visit each node."
    },
    {
      "content": "When calculating the tilt for a node, remember that if a node does not have a left or right child, its corresponding subtree sum should be treated as zero. This will help in handling leaf nodes."
    },
    {
      "content": "You will need a way to keep track of the total tilt as you compute it for each node. Consider using a global variable or a class attribute to accumulate the tilt values."
    },
    {
      "content": "As you traverse the tree, after calculating the tilt for a node, also compute the sum of values for that node's subtree. This sum will be needed for the parent node's tilt calculation."
    },
    {
      "content": "Think about the base case for your recursive function. What should you return when you reach a null node? Remember, this is where you can return a sum of 0."
    },
    {
      "content": "Make sure to handle the case where the tree is empty. What should your function return in that scenario? Consider how this affects your overall logic."
    },
    {
      "content": "When implementing your recursive function, you might structure it to return both the sum of the subtree and update the total tilt. This can help streamline your calculations."
    },
    {
      "content": "As you implement the tilt calculation, ensure that you are correctly computing the absolute difference. This is crucial for getting the right tilt value for each node."
    },
    {
      "content": "Finally, ensure that your function returns the accumulated tilt after the entire tree has been processed. This is the final output that meets the problem's requirements."
    }
  ],
  "questionNotes": [
    "The tilt of a node is the absolute difference between the sum of its left and right subtree values.",
    "If a node does not have a left child, the left subtree sum is treated as 0, and similarly for the right child.",
    "The number of nodes in the tree can range from 0 to 10,000.",
    "Node values can range from -1000 to 1000."
  ]
}