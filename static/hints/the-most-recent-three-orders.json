{
  "hints": [
    {
      "content": "Start by understanding the structure of the provided data. You have two tables: `Customers` and `Orders`. Each order is linked to a customer by `customer_id`. Make sure you can easily access both tables."
    },
    {
      "content": "Focus on the `Orders` table first. You need to extract the most recent three orders for each customer. Think about how you can sort the orders by date for each customer."
    },
    {
      "content": "Consider how you will group the orders by `customer_id`. You might want to use a data structure that allows you to collect orders for each customer efficiently."
    },
    {
      "content": "Once you have grouped the orders by customer, remember to sort these orders by `order_date` in descending order. This will help you easily access the most recent orders."
    },
    {
      "content": "After sorting, you need to select the top three orders for each customer. Think about how you can slice the list of orders after sorting to get just the three most recent ones."
    },
    {
      "content": "As you prepare to return the results, remember that you need to include customer details along with their orders. You'll need to combine information from both the `Customers` and `Orders` tables."
    },
    {
      "content": "Pay attention to the return format. You should return a list of results that includes the customer name, order ID, order date, and cost for each of the three most recent orders."
    },
    {
      "content": "Consider edge cases, such as what happens if a customer has fewer than three orders. How will you handle these cases in your result set?"
    },
    {
      "content": "Think about how you will structure your final output. You might want to create a list of dictionaries or a similar structure to hold the results for each customer."
    },
    {
      "content": "Finally, put everything together. Iterate through your grouped orders, sort them, select the top three, and format the output correctly. Ensure you handle any potential edge cases you identified earlier."
    }
  ],
  "questionNotes": [
    "You must link orders to customers using `customer_id`.",
    "Sort orders by `order_date` in descending order to get the most recent.",
    "Return the customer name along with the order details.",
    "Handle cases where a customer has fewer than three orders gracefully."
  ]
}