{
  "hints": [
    {
      "content": "Start by understanding the concept of GCD (Greatest Common Divisor). The GCD of a set of numbers is the largest number that divides all of them without leaving a remainder."
    },
    {
      "content": "Consider how to compute the GCD of a subarray. You can use the `gcd` function iteratively or recursively to find the GCD of multiple numbers."
    },
    {
      "content": "Think about how to efficiently find all subarrays of the given array. A subarray is defined as a contiguous segment of the array."
    },
    {
      "content": "Remember that the GCD of a single element is the element itself. So, any single element subarray is a valid candidate."
    },
    {
      "content": "As you iterate through potential subarrays, keep track of their GCD values. You might want to maintain a variable to hold the maximum GCD found so far."
    },
    {
      "content": "Pay attention to the size of the input array. If the array is large, a brute-force approach that checks all subarrays may not be feasible due to time complexity."
    },
    {
      "content": "Consider using a sliding window or two-pointer technique to optimize the process of finding subarrays and their GCDs."
    },
    {
      "content": "When calculating the GCD for a range of numbers, remember that you can update the GCD incrementally as you expand or shrink your window."
    },
    {
      "content": "Think about edge cases, such as when the array contains all identical elements. What would the GCD be in that case?"
    },
    {
      "content": "You may also encounter cases with zeros in the array. Remember that the GCD of any number and zero is the number itself, but GCD(0, 0) is undefined."
    },
    {
      "content": "Consider how to handle ties. If multiple subarrays yield the same maximum GCD, you need to return the size of the largest subarray that gives that GCD."
    },
    {
      "content": "Make sure to account for the constraints of the problem. For instance, what are the limits on the size of the array and the values it can contain?"
    },
    {
      "content": "Think about the return format. You need to return the size of the largest subarray that produces the maximum GCD, not the GCD itself."
    },
    {
      "content": "You might want to create helper functions for calculating GCD and for finding subarrays, which can help keep your code organized."
    },
    {
      "content": "Before finalizing your approach, sketch out a plan in pseudocode. This can help you visualize the steps you need to take."
    }
  ],
  "questionNotes": [
    "The input is an array of integers.",
    "You need to return the size of the largest subarray that has the maximum GCD.",
    "GCD of a single element is the element itself.",
    "Handle cases with zeros carefully, as GCD(0, 0) is undefined.",
    "If multiple subarrays yield the same maximum GCD, return the size of the largest one."
  ]
}