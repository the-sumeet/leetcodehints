{
  "hints": [
    {
      "content": "Start by understanding the input strings. You have two strings: `jewels` which contains types of jewels and `stones` which contains the stones you possess. Remember that the characters in `jewels` are unique."
    },
    {
      "content": "Think about how you can check if a stone is a jewel. You might want to consider using a data structure that allows for fast lookups, like a set. This could help you determine if a stone is a jewel efficiently."
    },
    {
      "content": "Consider iterating over each character in the `stones` string. For each stone, check if it exists in the `jewels` string. This will help you count how many stones are jewels."
    },
    {
      "content": "Remember that the comparison between jewels and stones is case sensitive. For instance, 'a' and 'A' are considered different types. Keep this in mind while checking for matches."
    },
    {
      "content": "You can initialize a counter to keep track of how many jewels you find in the stones. Each time you find a jewel, increment this counter."
    },
    {
      "content": "Before implementing your solution, think about edge cases. What if `jewels` or `stones` is empty? How would that affect your count? Make sure your solution can handle these scenarios."
    },
    {
      "content": "To optimize your solution, consider converting the `jewels` string into a set at the beginning. This will allow you to check for the presence of each stone in constant time."
    },
    {
      "content": "As you loop through each stone, remember to check against the set of jewels. If a stone is found in the jewels set, increase your counter by one."
    },
    {
      "content": "After you finish iterating through the stones, your counter will hold the total number of jewels you have. Make sure to return this count as the final output."
    },
    {
      "content": "Consider writing a small test case to validate your logic. For example, with `jewels = 'aA'` and `stones = 'aAAbbbb'`, you should expect the output to be 3. This will help ensure your implementation is correct."
    }
  ],
  "questionNotes": [
    "Constraints: 1 <= jewels.length, stones.length <= 50",
    "jewels and stones consist of only English letters.",
    "All characters in jewels are unique.",
    "The comparison is case-sensitive."
  ]
}