{
  "hints": [
    {
      "content": "Start by understanding the structure of the input data. You have two main components: 'Buses' and 'Passengers'. Each bus has an ID and an arrival time, while each passenger also has an ID and an arrival time."
    },
    {
      "content": "Consider how you will iterate through the list of passengers and compare their arrival times with the arrival times of the buses. You might want to use a nested loop where you check each passenger against each bus."
    },
    {
      "content": "Think about how to count the number of passengers that arrive before or at the same time as each bus. You can maintain a count for each bus as you go through the passengers."
    },
    {
      "content": "Remember to initialize your count for each bus before you start checking the passengers. This will ensure that you start counting from zero for each bus."
    },
    {
      "content": "Pay attention to edge cases, such as when no passengers arrive before a bus. Make sure your output reflects that by returning a count of zero for that bus."
    },
    {
      "content": "Consider using a data structure to store the counts for each bus. An array or a dictionary could work well, where the index or key corresponds to the bus ID."
    },
    {
      "content": "As you iterate through the buses, you might want to keep track of the current bus's arrival time and reset the passenger count for each bus appropriately."
    },
    {
      "content": "Make sure to handle the case where multiple passengers arrive at the same time as a bus. They should all be counted as boarding that bus."
    },
    {
      "content": "After processing all passengers for a bus, store the count in the appropriate data structure. This will allow you to return the results in the required format later."
    },
    {
      "content": "Finally, ensure that your output format matches the expected result. You may need to return an array or a dictionary that maps each bus ID to its corresponding passenger count."
    }
  ],
  "questionNotes": [
    "Input consists of two lists: Buses (with bus_id and arrival_time) and Passengers (with passenger_id and arrival_time).",
    "Each bus can have multiple passengers arriving at the same time, and they should all be counted.",
    "The output should reflect the number of passengers for each bus in the order of bus IDs.",
    "Consider edge cases where no passengers arrive before a bus, which should return a count of zero."
  ]
}