{
  "hints": [
    {
      "content": "Start by understanding the structure of the two tables: Employee and Bonus. Focus on the columns in each table, especially how they relate to each other through the empId."
    },
    {
      "content": "Identify the columns you need to retrieve in your final output. You need the employee's name from the Employee table and the bonus from the Bonus table."
    },
    {
      "content": "Consider how to join the two tables. Since empId is the common column, think about using an INNER JOIN to combine the Employee and Bonus tables based on empId."
    },
    {
      "content": "Remember to filter the results based on the bonus amount. You only want employees whose bonus is less than 1000. This can be done in the WHERE clause of your SQL query."
    },
    {
      "content": "Think about what happens if an employee does not have a corresponding entry in the Bonus table. How should you handle those cases? Consider using a LEFT JOIN instead of an INNER JOIN."
    },
    {
      "content": "When using a LEFT JOIN, employees without a bonus will have a NULL value in the bonus column. Make sure your query accounts for this when filtering."
    },
    {
      "content": "Check the output format requirements. Your result should return the name and bonus, but the order of the results does not matter."
    },
    {
      "content": "Consider edge cases: What if all employees have bonuses greater than or equal to 1000? Ensure your query handles this gracefully, potentially returning an empty result set."
    },
    {
      "content": "As you build your SQL query, remember to select the correct columns: you need to select the name from the Employee table and the bonus from the Bonus table."
    },
    {
      "content": "Finally, construct your SQL query. Use the JOIN, WHERE clause for filtering, and SELECT statement to get the desired columns. Ensure you test your query with various inputs to confirm it works as expected."
    }
  ],
  "questionNotes": [
    "The empId column in both tables is unique and serves as the primary key in Employee and foreign key in Bonus.",
    "Employees with no bonus should still be included with a NULL value in the bonus column.",
    "The output does not require a specific order."
  ]
}