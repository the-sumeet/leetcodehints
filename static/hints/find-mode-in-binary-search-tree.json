{
  "hints": [
    {
      "content": "Start by understanding the structure of a Binary Search Tree (BST). Recall that in a BST, for any given node, all values in the left subtree are less than or equal to the node's value, and all values in the right subtree are greater than or equal to the node's value."
    },
    {
      "content": "Consider how you might traverse the BST. In-order traversal is a common approach for BSTs because it visits nodes in ascending order. Think about how this could help you count the occurrences of each value."
    },
    {
      "content": "As you traverse the tree, keep track of the current value and its count. You will need to compare this count to the maximum count found so far to determine if you have found a new mode."
    },
    {
      "content": "Remember to handle the case where you encounter a new value. You will need to reset the count for this new value and possibly update your maximum count if this new count exceeds the previous maximum."
    },
    {
      "content": "Consider how you will store the modes. If there are multiple modes, you need a way to keep track of all of them. Think about using a list or array to store these values."
    },
    {
      "content": "Pay attention to edge cases, such as when the tree has only one node or when all nodes have the same value. How will your logic handle these scenarios?"
    },
    {
      "content": "To optimize space usage, think about how you can do this without using additional data structures. You might be able to use variables to keep track of counts and modes directly."
    },
    {
      "content": "As you implement your solution, ensure that you correctly handle the return format. The problem states that you can return the modes in any order, so focus on collecting them correctly."
    },
    {
      "content": "Before finalizing your solution, test it with various inputs, including edge cases like a single-node tree or a tree where all nodes have the same value. This will help ensure your solution is robust."
    },
    {
      "content": "Consider how you will handle ties in frequency. If two values have the same maximum frequency, both should be included in the result. Make sure your logic accounts for this."
    }
  ],
  "questionNotes": [
    "The BST can contain duplicates.",
    "Return all modes in any order.",
    "The number of nodes is between 1 and 10,000.",
    "Node values range from -100,000 to 100,000.",
    "You may need to handle ties in frequency."
  ]
}